{"version":3,"sources":["component/Home.js","component/EventProgress.js","component/DarkModeBtn.js","component/RankingTop10.js","component/Ranking.js","component/Rankingtips.js","component/Joke.js","component/AboutLZ.js","component/LangSelector.js","component/Main.js","App.js","serviceWorker.js","reducers/isLoggedIn.js","actions/ActionTypes.js","reducers/index.js","store.js","i18n.js","index.js","background/abcsleep.png","component/aboutlz.png"],"names":["Home","Component","EventProgress","props","className","ProgressBar","variant","animated","min","max","now","label","style","backgroundColor","DarkModeBtn","t","useTranslation","FormControlLabel","control","Switch","checked","onChange","e","name","color","RankingTop10","data","trackData","eventStartTimestamp","eventDuration","maintainenceHr","useState","rowRecord","setRowRecord","setGridApi","darkMode","setDarkMode","columnDefs","setColumnDefs","roundMaxPt","fastestRound","formattedTimestamp","timestamp","dateobj","Date","yy","getFullYear","mm","getMonth","dd","getDate","hh","getHours","getMinutes","timestampToDateTime","lastModified","eventProgressed","getTimeDifference","colDef","headerName","field","sortable","filter","maxWidth","cellStyle","params","fontWeight","minWidth","valueFormatter","numberFormatter","node","rank","val","value","setDiffLastRoundCellStyle","factor","time_str","res","split","hrs","parseInt","fromTimeStrToMin","setCatchTimeCellStyle","setPointCellStyle","Math","floor","toString","replace","changeName","originName","id","i","length","gameId","getSpeedComment","speed","standard","performance","timestamp1","timestamp2","result","secondsToHrsAndMins","second","hours","mins","a","fetch","response","json","getSpecificIdRecord","array","userId","j","push","point","getActualRoundWithId","Set","size","getPointDiffInPeriod","minutes","rec","updateAllData","useCallback","getAllRecord","then","map","item","top","records","useEffect","interval","setInterval","clearInterval","target","endAt","startAt","toFixed","height","width","rowData","topUsers","top10","rankLevel","introduction","userDeck","bonus","diff_1st","diff_last","diff_last_round","ceil","catch_time","point_per_hour","round_per_hour","point_10mins","point_30mins","point_60mins","rest","playerId","valid_round","speed_in_theory","comment","getTop10Data","onGridReady","api","onRowClicked","Ranking","onChangeLanguage","console","log","top10Ref","current","getAllData","eventId","eventName","startDate","timestampToDate","startTime","timestampToTime","eventDurationHr","round","ranks","setState","eventDetail","state","trackingIDs","createRef","this","fullDate","index","findIndex","x","temp","fontStyle","Trans","ref","tracking","TextField","type","background","borderRadius","defaultValue","onTrackIDChange","margin","InputLabelProps","shrink","onTrackNameChange","withTranslation","Rankingtips","src","abcsleep","atl","Joke","AboutLZ","aboutLZ","LangSelector","i18n","selectedLang","setSelectedLang","event","changeLanguage","textAlign","Main","RankingRef","useRef","key","exact","to","path","component","App","Boolean","window","location","hostname","match","loginReducer","action","isLoggedIn","username","payload","userlevel","allReducers","combineReducers","login","store","createStore","use","Backend","LanguageDetector","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"mPAiBeA,E,uKAbX,OACE,6BACE,4FACA,yFAAiB,6BAAjB,6FACmB,6BADnB,2HAEwB,6BAFxB,gK,GALWC,a,yFCuBJC,EArBO,SAAAC,GACpB,OACE,yBAAKC,UAAU,YACb,kBAACC,EAAA,EAAD,CACEC,QAAQ,SACRC,UAAQ,EACRC,IAAK,EACLC,IAAK,IACLC,IAAKP,EAAMO,IACXC,MAAOR,EAAMQ,MACbC,MAAO,CAAEC,gBAAiB,e,0BCuBnBC,EA/BK,SAAAX,GAElB,IAIOY,EAAMC,cAAND,EAGP,OACE,6BACE,kBAACE,EAAA,EAAD,CACFC,QACC,kBAACC,EAAA,EAAD,CACCC,QAASjB,EAAMiB,QACfC,SAbqB,SAACC,GACxBnB,EAAMkB,SAASC,IAabC,KAAK,YACLC,MAAM,YAGRb,MAAOI,EAAE,iBCjBE,SAASU,EAAT,GAA8F,IAAvEC,EAAsE,EAAtEA,KAAMC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,oBAAqBC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,eAAiB,EAEzEC,mBAAS,CAAC,KAF+D,mBAEpGC,EAFoG,KAEzFC,EAFyF,OAG7EF,mBAAS,MAHoE,mBAG3FG,GAH2F,aAI3EH,oBAAS,GAJkE,mBAIpGI,EAJoG,KAI1FC,EAJ0F,OAKvEL,mBAAS,IAL8D,mBAKpGM,EALoG,KAKxFC,EALwF,OAMvEP,mBAAS,OAN8D,mBAMpGQ,EANoG,aAOnER,mBAAS,MAP0D,mBAOpGS,EAPoG,KAUnGzB,GAVmG,KAU7FC,cAAND,GAEJ0B,EA+JJ,SAA6BC,GAC5B,IAAIC,EAAU,IAAIC,KAAiB,IAAZF,GACnBG,EAAKF,EAAQG,cACbC,EAAKJ,EAAQK,WAAW,EACxBC,EAAKN,EAAQO,UACbC,EAAKR,EAAQS,WACb5C,EAAMmC,EAAQU,aAElB,OAAQR,EAAG,KAAKE,GAAI,GAAGA,EAAG,IAAIA,GAAI,KAAKE,GAAI,GAAGA,EAAG,IAAIA,GAAI,KACpDE,GAAI,GAAGA,EAAG,IAAIA,GAAI,KAAK3C,GAAK,GAAGA,EAAI,IAAIA,GAxKpB8C,CAAoB5B,EAAK6B,cAC9CC,EAAkBC,EAAkB/B,EAAK6B,aAAc3B,GACvD8B,EAAS,CACZ,CAAEC,WAAY,IAAKC,MAAO,OAAQC,UAAU,EAAOC,QAAQ,EAAOC,SAAU,IAC5E,CAAEJ,WAAY,KAAMC,MAAO,OAAQC,UAAU,EAAMC,OAAQ,qBAAsBE,UAAW,SAAAC,GAAM,MAyB1F,CAAEzC,MAAO,UAAW0C,WAAY,SAzBwFC,SAAU,KAC1I,CAAER,WAAW,GAAD,OAAK5C,EAAE,aAAe6C,MAAO,QAASC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBN,SAAU,KAC5H,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,gBAAkB6C,MAAO,QAASC,UAAU,EAAMC,QAAQ,EAAOC,SAAU,KAC9F,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,aAAe6C,MAAO,WAAYC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBN,SAAU,KAC/H,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,eAAiB6C,MAAO,YAAaC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBN,SAAU,KAClI,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,aAAe6C,MAAO,kBAAmBC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBL,UAAW,SAAAC,GAAM,OAuB7I,SAAmCA,GAEjC,GAA6B,IAA1BA,EAAOK,KAAK5C,KAAK6C,KAClB,OAAO,KACT,IAAIC,EAAMP,EAAOQ,MACjB,GAAGD,GAAO,GACR,MAAO,CAA6ChD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,WAErG,GAAG2D,GAAO,IAAMA,IAAQ,GAC3B,MAAO,CAA8ChD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,WAEtG,GAAG2D,IAAQ,GACd,MAAO,CAA8ChD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,WAE3G,OAAO,KArCwI6D,CAA0BT,IAASF,SAAU,KAC9L,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,eAAiB6C,MAAO,aAAcC,UAAU,EAAMC,QAAQ,EAAOE,UAAW,SAAAC,GAAM,OAwCzG,SAA+BA,EAAQU,GAErC,GAA6B,IAA1BV,EAAOK,KAAK5C,KAAK6C,KACrB,OAAO,KACN,IAAIC,EAgCN,SAA0BI,GACxB,IAAIC,EAAMD,EAASE,MAAT,WAAmB/D,EAAE,QAArB,MACNgE,EAAMC,SAASH,EAAI,IACnBrE,EAAMwE,SAASH,EAAI,IACvB,OAAc,GAANE,EAAWvE,EApCTyE,CAAiBhB,EAAOQ,OAClC,GAAGD,EAAe,EAATG,EACP,MAAO,CAAuBnD,MAAO,OAAQ0C,WAAY,OAASrD,gBAAiB,WAEhF,GAAG2D,EAAMG,GAAUH,GAAgB,EAATG,EAC7B,MAAO,CAAuBnD,MAAO,OAAQ0C,WAAY,OAASrD,gBAAiB,WAEhF,GAAG2D,GAAO,GAAKA,GAAOG,EACzB,MAAO,CAAuBnD,MAAO,OAAQ0C,WAAY,OAASrD,gBAAiB,WAErF,OAAO,KAtDoGqE,CAAsBjB,EAAQ,KAAKF,SAAU,KAC1J,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,gBAAkB6C,MAAO,iBAAkBC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBN,SAAU,IACxI,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,qBAAuB6C,MAAO,iBAAkBC,UAAU,EAAMC,QAAQ,EAAOC,SAAU,KAC5G,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,cAAgB6C,MAAO,eAAgBC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBL,UAAW,SAAAC,GAAM,OAAIkB,EAAkBlB,EAAQ1B,IAAawB,SAAU,IAChM,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,cAAgB6C,MAAO,eAAgBC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBL,UAAW,SAAAC,GAAM,OAAIkB,EAAkBlB,EAAqB,EAAb1B,IAAiBwB,SAAU,IACpM,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,cAAgB6C,MAAO,eAAgBC,UAAU,EAAMC,QAAQ,EAAOM,eAAgBC,EAAiBL,UAAW,SAAAC,GAAM,OAAIkB,EAAkBlB,EAAqB,EAAb1B,IAAiBwB,SAAU,IACpM,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,SAAW6C,MAAO,OAAQC,UAAU,EAAMC,QAAQ,EAAOC,SAAU,KAEtF,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,yBAA2B6C,MAAO,cAAeC,UAAU,EAAMC,QAAQ,EAAOC,SAAU,KAC7G,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,0BAA4B6C,MAAO,kBAAmBC,UAAU,EAAMC,QAAQ,EAAOC,SAAU,KAClH,CAAEJ,WAAW,GAAD,OAAK5C,EAAE,UAAY6C,MAAO,UAAWC,UAAU,EAAMC,QAAQ,EAAOC,SAAU,MA+C1F,SAASoB,EAAkBlB,EAAQU,GACnC,IAAIH,EAAMP,EAAOQ,MACjB,OAAc,IAAXE,EACK,KACHH,GAAgB,EAATG,EACD,CAAmBnD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,OAExE2D,GAAgB,EAATG,GAAcH,EAAe,EAATG,EAC1B,CAAuBnD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,WAE5E2D,GAAOG,GAAUH,EAAe,EAATG,EACtB,CAAuBnD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,WAE5E2D,GAAO,GAAKA,EAAMG,EACjB,CAAuBnD,MAAO,OAAQ0C,WAAY,OAAQrD,gBAAiB,WAE7E,KAUV,SAASwD,EAAgBJ,GAGxB,OAAOmB,KAAKC,MAAMpB,EAAOQ,OAAOa,WAAWC,QAAQ,0BAA2B,OAG/E,SAASC,EAAWC,EAAYC,GAE/B,IADA,IAAInE,EAAOkE,EACFE,EAAI,EAAGA,EAAIhE,EAAUiE,OAAQD,IACrC,GAAGX,SAASU,KAAQ/D,EAAUgE,GAAGE,OAAQ,CACxCtE,EAAOI,EAAUgE,GAAGpE,KACpB,MAGF,OAAOA,EAqCR,IAAMuE,EAAkB,SAACC,EAAOC,GAC/B,IAAIC,EAAcF,EAAQC,EAW1B,OAVYC,GAAe,IAAQ,KAChCA,GAAe,KAAS,IACxBA,GAAe,GAAO,KACtBA,GAAe,KAAS,IACxBA,GAAe,IAAQ,KACvBA,GAAe,KAAS,IACxBA,GAAe,GAAO,KACtBA,GAAe,KAAS,IACxBA,GAAe,IAAQ,IACxB,8CAgBH,SAASxC,EAAkByC,EAAYC,GACtC,IAAIC,EAAS,EAIb,OAHGF,GAAcC,IAChBC,EAASF,EAAaC,GAEhBC,EAIR,SAASC,EAAoBC,GAC5B,IAAIC,EAAQnB,KAAKC,MAAMiB,EAAS,MAC5BE,EAAOpB,KAAKC,MAAMiB,EAAS,IAAe,GAARC,EACtC,OAAQA,EAAM,IAAD,OAAKxF,EAAE,QAAP,KAAkByF,EAAvB,WAAgCzF,EAAE,WAnMgE,4CAsM3G,8BAAA0F,EAAA,sEACsBC,MAAM,6CAD5B,cACKC,EADL,gBAEkBA,EAASC,OAF3B,cAEKlF,EAFL,yBAGQA,GAHR,4CAtM2G,sBA8N1G,SAASmF,EAAoBC,EAAOC,GAClC,IAAIlC,EAAM,GACV,IAAIiC,GAA0B,IAAjBA,EAAMlB,OACjB,OAAO,KACT,IAAI,IAAID,EAAI,EAAGA,EAAImB,EAAMlB,OAAQD,IAC/B,IAAI,IAAIqB,EAAI,EAAGA,EAAIF,EAAMnB,GAAGC,OAAQoB,IAC/BF,EAAMnB,GAAGqB,GAAGD,SAAWA,GACxBlC,EAAIoC,KAAKH,EAAMnB,GAAGqB,GAAGE,OAG3B,OAAOrC,EAGT,SAASsC,EAAqBJ,GAC5B,IAAIlC,EAEJ,OADAA,EAAMgC,EAAoB7E,EAAW+E,GAC9B,IAAIK,IAAIvC,GAAKwC,KAAO,EAG7B,SAASC,EAAqBP,EAAQQ,GACpC,IAAI1C,EAAM,EAAsC2C,EAAM,GAEtD,OAAGD,EAAUvF,EAAU4D,QAAU2B,EAAU,IAM/B,OADVC,EAAMX,EAAoB7E,EAAW+E,MAWnClC,EARY2C,EAAI,IAEbD,EAAUC,EAAI5B,OAAO,EACL4B,EAAIA,EAAI5B,OAAS,GAGjB4B,EAAID,KAbpB1C,EAqBV,IAAM4C,EAAgBC,uBAAY,YA1QyE,2CA2Q1GC,GACCC,MAAK,SAAA/C,GAAG,OACRA,EAAIgD,KAAI,SAAAC,GACP,OAAOA,EAAKD,KAAI,SAAAE,GACf,MAAO,CACNhB,OAAQgB,EAAIhB,OACZG,MAAOa,EAAIb,gBAKdU,MAAK,SAAAI,GAAO,OAAI/F,EAAa+F,QAC5B,IAsBH,OAXCC,qBAAU,WAEVR,IAEA,IAAMS,EAAWC,aAAY,WAE5BV,MACE,MACH,OAAO,kBAAMW,cAAcF,MACxB,CAACT,EAAezF,IAGnB,6BACC,yBAAK5B,UAAU,qBACd,4BACEW,EAAE,UADJ,KACgB,2BAAIwB,GADpB,SACqCxB,EAAE,eADvC,KACwD,2BAAIyB,EAAJ,WAAuB,6BAC7EzB,EAAE,kBAFJ,KAEwB,2BAAIsF,EAAoB7C,IAFhD,KAEwEzC,EAAE,mBAF1E,KAE+F,2BAAIsF,EAAqC,GAAhBxE,EAAqB,GAAM2B,IAFnJ,MAKD,yBAAKpD,UAAU,sBACd,kBAAC,EAAD,CACCgB,QAASe,EACTd,SA3BsB,SAACC,GAC1Bc,EAAYd,EAAE+G,OAAOjH,SACrBkB,EAAcoB,OA4Bb,6BACC,kBAAC,EAAD,CACChD,IAAO8C,EAAkBC,EAAkB/B,EAAK4G,MAAO5G,EAAK6G,SAAY,IACxE5H,MAAK,WAAO6C,EAAkBC,EAAkB/B,EAAK4G,MAAO5G,EAAK6G,SAAY,KAAOC,QAAQ,GAAvF,QAGP,yBAAKpI,UAAU,QACd,yBACCsF,GAAG,SACHtF,UAAW+B,EAAS,uBAAuB,kBAC3CvB,MAAO,CAAE6H,OAAQ,QAASC,MAAO,QAEjC,kBAAC,cAAD,CACCrG,WAAYA,EACZsG,QA/ML,SAAsBjH,GACrB,IAAI0E,EAAS,GACb,GAAG1E,EAAKkH,SAEP,IADA,IAAIC,EAAQnH,EAAKkH,SACRjD,EAAI,EAAGA,EAAIkD,EAAMjD,OAAQD,IACjCS,EAAOa,KAAK,CACX1C,KAAMsE,EAAMlD,GAAGpB,KACfhD,KAAMiE,EAAWqD,EAAMlD,GAAGpE,KAAMsH,EAAMlD,GAAGoB,QACzC+B,UAAWD,EAAMlD,GAAGmD,UACpBC,aAAcF,EAAMlD,GAAGoD,aACvBhC,OAAQ8B,EAAMlD,GAAGoB,OACjBG,MAAO2B,EAAMlD,GAAGuB,MAChB8B,SAAUH,EAAMlD,GAAGqD,SACnBC,MAAO,EACPC,SAAWvD,EAAI,EAAKkD,EAAMlD,GAAGuB,MAAQ2B,EAAM,GAAG3B,MAAS,EACvDiC,UAAYxD,EAAI,EAAKkD,EAAMlD,GAAGuB,MAAQ2B,EAAMlD,EAAI,GAAGuB,MAAS,EAC5DkC,gBAAkBzD,EAAI,GAAmE,EAA/DP,KAAKiE,MAAMR,EAAMlD,EAAI,GAAGuB,MAAQ2B,EAAMlD,GAAGuB,OAAS3E,GAAiB,EAC7F+G,WAAYjD,EAAoBV,EAAI,EAAIP,KAAKiE,MAAMR,EAAMlD,EAAI,GAAGuB,MAAQ2B,EAAMlD,GAAGuB,OAAS3E,EAAaC,GAAgB,GACvH+G,eAAiBV,EAAMlD,GAAGuB,OAAU1D,EAAmC,KAAjB1B,EAAyB,GAAK0B,EAAmC,KAAjB1B,GAAyB,KAAQ0B,EAAkB,MACzJgG,gBAAiBX,EAAMlD,GAAGuB,OAAU1D,EAAmC,KAAjB1B,EAAyB,GAAK0B,EAAmC,KAAjB1B,GAAyB,KAAQ0B,EAAkB,MAASjB,GAAYiG,QAAQ,GACtLiB,aAAcnC,EAAqBuB,EAAMlD,GAAGoB,OAAQ,IACpD2C,aAAcpC,EAAqBuB,EAAMlD,GAAGoB,OAAQ,IACpD4C,aAAcrC,EAAqBuB,EAAMlD,GAAGoB,OAAQ,IACpD6C,KAAM,EACDC,SAAUhB,EAAMlD,GAAGoB,OACnB+C,YAAa3C,EAAqB0B,EAAMlD,GAAGoB,QAChDgD,iBAAkBzC,EAAqBuB,EAAMlD,GAAGoB,OAAQ,IAAMxE,GAAYiG,QAAQ,GAClFwB,QAASlE,EAAiBwB,EAAqBuB,EAAMlD,GAAGoB,OAAQ,IAAMxE,EAAa4E,EAAqB0B,EAAMlD,GAAGoB,WAIpH,OAAOX,EAgLM6D,CAAavI,GACtBwI,YAvSJ,SAAqBjG,GACrB/B,EAAW+B,EAAOkG,KAClB7H,EAAcoB,IAsSV0G,aAAc,SAKjB,6BACC,4BAAKrJ,EAAE,eAAP,KAAyB0B,K,sBCrVvB4H,E,kDAEJ,WAAYlK,GAAQ,IAAD,8BACjB,cAAMA,IAiBRmK,iBAAmB,WACjBC,QAAQC,IAAI,mDACZ,EAAKC,SAASC,QAAQJ,oBApBL,EAuBnBK,WAvBmB,sBAuBN,8BAAAlE,EAAA,sEACQC,MAAM,8CADd,cACTC,EADS,gBAEIA,EAASC,OAFb,cAETlF,EAFS,yBAGNA,GAHM,2CAvBM,EA6BnB+F,cAAgB,WAEhB,EAAKkD,aACJ/C,MAAK,SAAA/C,GACL,MAAO,CACNtB,aAAcsB,EAAItB,aACdqF,SAAU/D,EAAI+D,SACdgC,QAAS/F,EAAI+F,QACbC,UAAWhG,EAAIgG,UACftC,QAAS1D,EAAI0D,QACbD,MAAOzD,EAAIyD,MACXwC,UAAW,EAAKC,gBAAgBlG,EAAI0D,SACpCyC,UAAW,EAAKC,gBAAgBpG,EAAI0D,SACpC2C,gBAAiB9F,KAAK+F,OAAOtG,EAAIyD,MAAQzD,EAAI0D,SAAjB,UAG/BX,MAAK,SAAAwD,GAAK,OAAI,EAAKC,SAAS,CAAEC,YAAaF,QA3C5C,EAAKG,MAAQ,CACXD,YAAa,GACbxJ,eAAgB,EAChBK,UAAU,EACVqJ,YAAa,CACX,CAAC9F,GAAI,EAAGG,OAAQ,EAAGtE,KAAM,IACzB,CAACmE,GAAI,EAAGG,OAAQ,EAAGtE,KAAM,IACzB,CAACmE,GAAI,EAAGG,OAAQ,EAAGtE,KAAM,IACzB,CAACmE,GAAI,EAAGG,OAAQ,EAAGtE,KAAM,IACzB,CAACmE,GAAI,EAAGG,OAAQ,EAAGtE,KAAM,IACzB,CAACmE,GAAI,EAAGG,OAAQ,EAAGtE,KAAM,MAG7B,EAAKkJ,SAAWgB,sBAfC,E,8LAkDjBC,KAAKjE,gBACDS,EAAWC,aAAY,WAEzB,EAAKV,kBACN,M,mBACI,kBAAMW,cAAcF,M,4IAIXxF,GACd,IAAIiJ,EAAW,IAAI/I,KAAiB,IAAZF,GAIxB,OAHWiJ,EAAS7I,cACjB,KAAM6I,EAAS3I,WAAW,EAAG,GAAG,KAAK2I,EAAS3I,WAAW,GAAI2I,EAAS3I,WAAW,GACjF,KAAK2I,EAASzI,UAAU,GAAG,IAAIyI,EAASzI,UAAUyI,EAASzI,a,sCAIhDR,GACd,IAAIiJ,EAAW,IAAI/I,KAAiB,IAAZF,GAGxB,OAFYiJ,EAASvI,WAAW,GAAG,IAAIuI,EAASvI,WAAWuI,EAASvI,YACjE,KAAKuI,EAAStI,aAAa,GAAG,IAAIsI,EAAStI,aAAasI,EAAStI,gB,sCAItDqC,EAAIpE,GAClB,IAAIsK,EAAQF,KAAKH,MAAMC,YAAYK,WAAU,SAAAC,GAAC,OAAIA,EAAEpG,KAAOA,KAC3D,IAAe,IAAXkG,EAAc,CAEhB,IAAIG,EAAI,YAAOL,KAAKH,MAAMC,aAC1BO,EAAKH,GAAO/F,OAASb,SAAS1D,EAAE+G,OAAO5D,OACvCiH,KAAKL,SAAS,CACZG,YAAY,YACPO,UASPxB,QAAQC,IAAI,oC,wCAIE9E,EAAIpE,GACpB,IAAIsK,EAAQF,KAAKH,MAAMC,YAAYK,WAAU,SAAAC,GAAC,OAAIA,EAAEpG,KAAOA,KAC3D,IAAe,IAAXkG,EAAc,CAEhB,IAAIG,EAAI,YAAOL,KAAKH,MAAMC,aAC1BO,EAAKH,GAAOrK,KAAOD,EAAE+G,OAAO5D,MAC5BiH,KAAKL,SAAS,CACZG,YAAY,YAAKO,UAKnBxB,QAAQC,IAAI,iC,+BAIN,IAAD,OACP,OACE,6BACI,6BACE,wBAAI5J,MAAO,CAAEoL,UAAU,WAAvB,YAA4C,2BAAIN,KAAKH,MAAMD,YAAYT,UAA3B,KAAwCa,KAAKH,MAAMD,YAAYV,QAA/D,MAC5C,4BACE,kBAACqB,EAAA,EAAD,mBADF,KAC6B,2BAAIP,KAAKH,MAAMD,YAAYR,UAA3B,KAD7B,KAEI,kBAACmB,EAAA,EAAD,oBAFJ,KAEgC,2BAAIP,KAAKH,MAAMD,YAAYJ,gBAA3B,IAA4C,kBAACe,EAAA,EAAD,eAE5E,kBAACxK,EAAD,CACEC,KAAMgK,KAAKH,MAAMD,YACjB3J,UAAW+J,KAAKH,MAAMC,YACtB5J,oBAAqB8J,KAAKH,MAAMD,YAAY/C,QAC5C1G,cAAe6J,KAAKH,MAAMD,YAAYJ,gBACtCpJ,eAAgB4J,KAAKH,MAAMzJ,eAC3BoK,IAAKR,KAAKjB,YAGd,yBAAKrK,UAAU,oBACZsL,KAAKH,MAAMC,YAAY3D,KAAI,SAACsE,EAAUxG,GAAX,OAC1B,6BACE,kBAACyG,EAAA,EAAD,CACEzL,MAAM,iBACN0L,KAAK,SACLzL,MAAO,CAAE0L,WAAY,QAASC,aAAc,OAC5CC,aAAcL,EAAStG,OACvBxE,SAAa,SAAAC,GAAC,OAAI,EAAKmL,gBAAgB9G,EAAGrE,IAC1CC,KAAM,WAAWoE,EACjBrF,QAAQ,SACRoM,OAAO,QACPC,gBAAiB,CACfC,QAAQ,KAXd,OAeE,kBAACR,EAAA,EAAD,CACEzL,MAAM,uCACNC,MAAO,CAAE0L,WAAY,QAASC,aAAc,OAC5CC,aAAcL,EAAS5K,KACvBF,SAAa,SAAAC,GAAC,OAAI,EAAKuL,kBAAkBlH,EAAGrE,IAC5CC,KAAM,aAAaoE,EACnBrF,QAAQ,SACRoM,OAAO,QACPC,gBAAiB,CACfC,QAAQ,UAMlB,yBAAKxM,UAAU,qBACb,gDAAyB,6BACzB,gDAAyB,6BACzB,sD,GAtKUH,aA6KP6M,gBAAkBzC,G,iBCjKlB0C,E,uKAZX,OACE,6BACE,wDACA,6BACE,yBAAKC,IAAKC,IAAUC,IAAI,GAAGxE,MAAM,SAEnC,yH,GARkBzI,aCYXkN,E,uKAXX,OACE,6BACE,4EACA,mC,GALWlN,a,iBCaJmN,E,uKAXX,OACE,yBAAKhN,UAAU,WACb,8FACA,6BACE,yBAAK4M,IAAKK,IAASH,IAAI,GAAGxE,MAAM,c,GANpBzI,aC8BPqN,EA7BM,SAACnN,GAAW,IACvBoN,EAASvM,cAATuM,KADsB,EAEUxL,mBAAS,MAFnB,mBAEvByL,EAFuB,KAETC,EAFS,KAU9B,OACE,yBAAKpM,SAPgB,SAACqM,GACtBD,EAAgBC,EAAMrF,OAAO5D,OAC7B8I,EAAKI,eAAeD,EAAMrF,OAAO5D,OACjCtE,EAAMkB,SAASqM,KAKb,wBAAI9M,MAAO,CAAEgN,UAAW,UACtB,2BAAOxN,UAAU,QACf,2BAAOiM,KAAK,QAAQ5H,MAAM,KAAKlD,KAAK,WAAWH,QAA0B,OAAjBoM,IAD1D,6BADF,WAKE,+BACE,2BAAOnB,KAAK,QAAQ5H,MAAM,KAAKlD,KAAK,WAAWH,QAA0B,OAAjBoM,IAD1D,uBALF,WASE,+BACE,2BAAOnB,KAAK,QAAQ5H,MAAM,KAAKlD,KAAK,WAAWH,QAA0B,OAAjBoM,IAD1D,eC0BOK,EAtCF,WAAO,IAEV9M,EAAMC,cAAND,EAEF+M,EAAaC,iBAAO1D,GAM1B,OACE,kBAAC,IAAD,KACE,6BACE,wBAAIjK,UAAU,UACZ,wBAAI4N,IAAK,GAAG,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAKnN,EAAE,eACrC,wBAAIiN,IAAK,GAAG,kBAAC,IAAD,CAASE,GAAG,YAAYnN,EAAE,WACtC,wBAAIiN,IAAK,GAAG,kBAAC,IAAD,CAASE,GAAG,gBAAgBnN,EAAE,eAC1C,wBAAIiN,IAAK,GAAG,kBAAC,IAAD,CAASE,GAAG,UAAUnN,EAAE,WACpC,wBAAIiN,IAAK,GAAG,kBAAC,IAAD,CAASE,GAAG,YAAYnN,EAAE,eAKxC,kBAAC,EAAD,CAAcM,SAjBK,SAACC,OAkBpB,yBAAKlB,UAAU,WACb,kBAAC,IAAD,CAAO6N,OAAK,EAACE,KAAK,IAAIC,UAAWpO,IACjC,kBAAC,IAAD,CAAOmO,KAAK,WAAWC,UAAW/D,EAAS6B,IAAK4B,IAChD,kBAAC,IAAD,CAAOK,KAAK,eAAeC,UAAWrB,IACtC,kBAAC,IAAD,CAAOoB,KAAK,SAASC,UAAWjB,IAChC,kBAAC,IAAD,CAAOgB,KAAK,WAAWC,UAAWhB,Q,cCzB7BiB,MAVf,WACE,OACE,yBAAKjO,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,SCEYkO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCSSC,EAvBM,SAACpD,EAAOqD,GACzB,OAAQA,EAAOvC,MACX,ICLa,QDMT,MAAO,CACHwC,YAAY,EACZC,SAAUF,EAAOG,QAAQD,SACzBE,UAAWJ,EAAOG,QAAQC,WAElC,ICVc,SDgBd,QACI,MAAO,CACHH,YAAY,EACZC,SAAU,GACVE,WAAY,KEbbC,EALKC,YAAgB,CAChCC,MAAOR,ICAIS,EAFDC,YAAYJ,G,gCCG1B1B,IAGG+B,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,IAAK,KACLC,QAAS,CAEPC,SAAU,oCAEZC,YAAa,KACbC,OAAO,EAEPC,GAAI,CAAC,gBACLC,UAAW,eACXC,cAAc,EACdC,cAAe,CACbC,aAAa,EACbC,gBAAiB,KAEnBC,MAAO,CACLC,MAAM,KAIGhD,EAAf,ECvBAiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,WAAD,CAAUC,SAAU,6CAClB,kBAAC,IAAD,CAAUvB,MAAOA,GACf,kBAAC,EAAD,SAINwB,SAASC,eAAe,SN4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpJ,MAAK,SAAAqJ,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7G,QAAQ6G,MAAMA,EAAMC,a,wCOzI5BC,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.5c6ba74d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n \r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>安安。你來錯地方了。</h2>\r\n        <p>這裡是LZ，我們啥都幹 - <br/>\r\n            幹榜幹房幹按鈕幹人和幹人老婆。<br/>\r\n            只要是為了要跑者不睡覺我們啥都幹得出來。<br/>\r\n            我們還有獨特的迫害文化，讓你進群1分鐘馬上懷疑人生。\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nconst EventProgress = props => {\r\n  return (\r\n    <div className=\"progress\">\r\n      <ProgressBar \r\n        variant=\"custom\" \r\n        animated \r\n        min={0}\r\n        max={100}\r\n        now={props.now} \r\n        label={props.label}\r\n        style={{ backgroundColor: 'inherit' }} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nEventProgress.propTypes = {\r\n  now: PropTypes.number.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default EventProgress\r\n","import React from 'react'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport PropTypes from 'prop-types'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DarkModeBtn = props => {\r\n\r\n  const onChangeDarkMode = (e) => {\r\n    props.onChange(e);\r\n  }\r\n  // Translation\r\n\tconst { t } = useTranslation();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tchecked={props.checked}\r\n\t\t\t\t\t\tonChange={onChangeDarkMode}\r\n\t\t\t\t\t\tname=\"dark_mode\" \r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel={t('DARK_MODE')}\r\n\t\t\t/>\r\n    </div>\r\n  )\r\n}\r\n\r\nDarkModeBtn.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DarkModeBtn\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\nimport EventProgress from './EventProgress';\r\nimport DarkModeBtn from './DarkModeBtn';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function RankingTop10({data, trackData, eventStartTimestamp, eventDuration, maintainenceHr}) {\r\n\r\n\tconst [rowRecord, setRowRecord] = useState([[]]);\r\n\tconst [gridApi, setGridApi] = useState(null);\r\n\tconst [darkMode, setDarkMode] = useState(true);\r\n\tconst [columnDefs, setColumnDefs] = useState([]);\r\n\tconst [roundMaxPt, setRoundMaxPt] = useState(11500);\r\n\tconst [fastestRound, setFastestRound] = useState(130);\r\n\r\n\t// Translation\r\n\tconst { t } = useTranslation();\r\n\r\n\tvar formattedTimestamp = timestampToDateTime(data.lastModified);\r\n\tvar eventProgressed = getTimeDifference(data.lastModified, eventStartTimestamp);\r\n\tvar colDef = [\r\n\t\t{ headerName: \"#\", field: \"rank\", sortable: false, filter: false, maxWidth: 55 },\r\n\t\t{ headerName: \"ID\", field: \"name\", sortable: true, filter: \"agTextColumnFilter\", cellStyle: params => setNameCellStyle(params), minWidth: 120 },\r\n\t\t{ headerName: `${t('EVENT_PT')}`, field: \"point\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 110 },\r\n\t\t{ headerName: `${t('EVENT_BONUS')}`, field: \"bonus\", sortable: true, filter: false, maxWidth: 100 },\r\n\t\t{ headerName: `${t('1ST_DIFF')}`, field: \"diff_1st\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 110 },\r\n\t\t{ headerName: `${t('FRONT_DIFF')}`, field: \"diff_last\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 110 },\r\n\t\t{ headerName: `${t('RND_DIFF')}`, field: \"diff_last_round\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setDiffLastRoundCellStyle(params), maxWidth: 100 },\r\n\t\t{ headerName: `${t('CATCH_TIME')}`, field: \"catch_time\", sortable: true, filter: false, cellStyle: params => setCatchTimeCellStyle(params, 60), maxWidth: 140 },\r\n\t\t{ headerName: `${t('PT_PER_HOUR')}`, field: \"point_per_hour\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 95 },\r\n\t\t{ headerName: `${t('AVG_RND_PER_HOUR')}`, field: \"round_per_hour\", sortable: true, filter: false, maxWidth: 105 },\r\n\t\t{ headerName: `${t('PT_10MINS')}`, field: \"point_10mins\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setPointCellStyle(params, roundMaxPt), maxWidth: 90 },\r\n\t\t{ headerName: `${t('PT_30MINS')}`, field: \"point_30mins\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setPointCellStyle(params, roundMaxPt * 3), maxWidth: 90 },\r\n\t\t{ headerName: `${t('PT_60MINS')}`, field: \"point_60mins\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setPointCellStyle(params, roundMaxPt * 6), maxWidth: 90 },\r\n\t\t{ headerName: `${t('REST')}`, field: \"rest\", sortable: true, filter: false, maxWidth: 100 },\r\n\t\t// { headerName: `${t('PLAYER_NAME')}`, field: \"playerId\", sortable: true, filter: false, maxWidth: 120 } \r\n\t\t{ headerName: `${t('INSTANT_RND_PER_HOUR')}`, field: \"valid_round\", sortable: true, filter: false, maxWidth: 105 },\r\n\t\t{ headerName: `${t('INSTANT_RND_IN_MAX_PT')}`, field: \"speed_in_theory\", sortable: true, filter: false, maxWidth: 100 },\r\n\t\t{ headerName: `${t('GRADE')}`, field: \"comment\", sortable: true, filter: false, maxWidth: 120 }\r\n\t];\r\n\t\r\n  function onGridReady(params) {\r\n\t\tsetGridApi(params.api);\r\n\t\tsetColumnDefs(colDef);\r\n\t}\r\n \r\n\tfunction setNameCellStyle(params) {\r\n\t\treturn  { color: '#8888ff', fontWeight: 'bold' };\r\n\t}\r\n\r\n  function setDiffLastRoundCellStyle(params) {\r\n    // Do not render style for Rank 1st\r\n    if(params.node.data.rank === 1) // WTF am I doing??\r\n      return null;\r\n    let val = params.value;\r\n    if(val < -85) {\r\n      return { /*color: '#99cc33', fontWeight: 'bold', */ color: '#000', fontWeight: 'bold', backgroundColor: '#b7e1cd' }; // light green\r\n    }\r\n    else if(val <- 30 && val >= -85) {\r\n      return { /*color: '#ffcc00', fontWeight: 'bold' , */ color: '#000', fontWeight: 'bold', backgroundColor: '#fce8b2' }; // light yellow\r\n    }\r\n    else if(val >= -30) {\r\n      return { /*color: '#ff9966', fontWeight: 'bold' , */ color: '#000', fontWeight: 'bold', backgroundColor: '#f4c7c3' }; // light red\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // factor is minute\r\n  function setCatchTimeCellStyle(params, factor) {\r\n    // Do not render style for Rank 1st\r\n    if(params.node.data.rank === 1) // WTF am I doing??\r\n\t\t\treturn null;\r\n    let val = fromTimeStrToMin(params.value);\r\n    if(val > factor * 3) {\r\n      return { /*color: '#99cc33'*/ color: '#000', fontWeight: 'bold' , backgroundColor: '#b7e1cd' }; // light green\r\n    }\r\n    else if(val > factor && val <= factor * 3) {\r\n      return { /*color: '#ffcc00'*/ color: '#000', fontWeight: 'bold' , backgroundColor: '#fce8b2' }; // light yellow\r\n    }\r\n    else if(val >= 0 && val <= factor) {\r\n      return { /*color: '#ff9966'*/ color: '#000', fontWeight: 'bold' , backgroundColor: '#f4c7c3' }; // light red\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  function setPointCellStyle(params, factor) {\r\n\t\tlet val = params.value;\r\n\t\tif(factor === 0) // return null if round max pt is not passed in\r\n\t\t\treturn null;\r\n    if(val >= factor * 5) {\r\n      return { /*color: 'red'*/ color: '#000', fontWeight: 'bold', backgroundColor: 'red'};\r\n    }\r\n    else if(val >= factor * 3 && val < factor * 5) {\r\n      return { /*color: '#ff9966'*/ color: '#000', fontWeight: 'bold', backgroundColor: '#f4c7c3'}; // light red\r\n    }\r\n    else if(val >= factor && val < factor * 3) {\r\n      return { /*color: '#ffcc00'*/ color: '#000', fontWeight: 'bold', backgroundColor: '#fce8b2'}; // light yellow\r\n    }\r\n    else if(val >= 0 && val < factor) {\r\n      return { /*color: '#99cc33'*/ color: '#000', fontWeight: 'bold', backgroundColor: '#b7e1cd'}; // light green\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function fromTimeStrToMin(time_str) {\r\n    let res = time_str.split(` ${t('HOUR')} `);\r\n    let hrs = parseInt(res[0]); // hrs\r\n    let min = parseInt(res[1]);\r\n    return (hrs * 60 + min);\r\n  }\r\n\r\n\tfunction numberFormatter(params) {\r\n\t\t// this puts commas into the number eg 1000 goes to 1,000,\r\n\t\t// I pulled this from stack overflow, i have no idea how it works\r\n\t\treturn Math.floor(params.value).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n\t}\r\n\r\n\tfunction changeName(originName, id) {\r\n\t\tlet name = originName;\r\n\t\tfor (let i = 0; i < trackData.length; i++) {\r\n\t\t\tif(parseInt(id) === trackData[i].gameId) {\r\n\t\t\t\tname = trackData[i].name;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n\r\n\tfunction getTop10Data(data) {\r\n\t\tlet result = [];\r\n\t\tif(data.topUsers) {\r\n\t\t\tlet top10 = data.topUsers;\r\n\t\t\tfor (var i = 0; i < top10.length; i++) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\trank: top10[i].rank,\r\n\t\t\t\t\tname: changeName(top10[i].name, top10[i].userId),\r\n\t\t\t\t\trankLevel: top10[i].rankLevel,\r\n\t\t\t\t\tintroduction: top10[i].introduction,\r\n\t\t\t\t\tuserId: top10[i].userId,\r\n\t\t\t\t\tpoint: top10[i].point,\r\n\t\t\t\t\tuserDeck: top10[i].userDeck, // deck of this top player.\r\n\t\t\t\t\tbonus: 0, // need to implement\r\n\t\t\t\t\tdiff_1st: (i > 0 ? (top10[i].point - top10[0].point) : 0),\r\n\t\t\t\t\tdiff_last: (i > 0 ? (top10[i].point - top10[i - 1].point) : 0),\r\n\t\t\t\t\tdiff_last_round: (i > 0 ? Math.ceil((top10[i - 1].point - top10[i].point) / roundMaxPt)*-1 : 0),\r\n\t\t\t\t\tcatch_time: secondsToHrsAndMins(i > 0 ? Math.ceil((top10[i - 1].point - top10[i].point) / roundMaxPt * fastestRound) : 0),\r\n\t\t\t\t\tpoint_per_hour: (top10[i].point / ((eventProgressed - maintainenceHr * 3600) > 0 ? (eventProgressed - maintainenceHr * 3600) / 3600 : (eventProgressed / 3600))),\r\n\t\t\t\t\tround_per_hour: (top10[i].point / ((eventProgressed - maintainenceHr * 3600) > 0 ? (eventProgressed - maintainenceHr * 3600) / 3600 : (eventProgressed / 3600)) / roundMaxPt).toFixed(2),\r\n\t\t\t\t\tpoint_10mins: getPointDiffInPeriod(top10[i].userId, 10),\r\n\t\t\t\t\tpoint_30mins: getPointDiffInPeriod(top10[i].userId, 30),\r\n\t\t\t\t\tpoint_60mins: getPointDiffInPeriod(top10[i].userId, 60),\r\n\t\t\t\t\trest: 0, // need to change\r\n          playerId: top10[i].userId,\r\n          valid_round: getActualRoundWithId(top10[i].userId),\r\n\t\t\t\t\tspeed_in_theory: (getPointDiffInPeriod(top10[i].userId, 60) / roundMaxPt).toFixed(2),\r\n\t\t\t\t\tcomment: getSpeedComment((getPointDiffInPeriod(top10[i].userId, 60) / roundMaxPt), getActualRoundWithId(top10[i].userId))\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconst getSpeedComment = (speed, standard) => {\r\n\t\tvar performance = speed / standard;\r\n\t\tvar rank = (performance >= 0.95) ? 'SS':\r\n\t\t\t\t(performance >= 0.925) ? 'S':\r\n\t\t\t\t(performance >= 0.9) ? 'A+':\r\n\t\t\t\t(performance >= 0.875) ? 'A':\r\n\t\t\t\t(performance >= 0.85) ? 'B+':\r\n\t\t\t\t(performance >= 0.825) ? 'B':\r\n\t\t\t\t(performance >= 0.8) ? 'C+':\r\n\t\t\t\t(performance >= 0.775) ? 'C':\r\n\t\t\t\t(performance >= 0.75) ? 'D':\r\n\t\t\t\t'†┏┛墓┗┓†'\r\n\t\treturn rank;\r\n\t}\r\n\r\n\tfunction timestampToDateTime(timestamp) {\r\n\t\tvar dateobj = new Date(timestamp * 1000);\r\n\t\tvar yy = dateobj.getFullYear();\r\n\t\tvar mm = dateobj.getMonth()+1;\r\n\t\tvar dd = dateobj.getDate();\r\n\t\tvar hh = dateobj.getHours();\r\n\t\tvar min = dateobj.getMinutes();\r\n\t\t//var ss = dateobj.getSeconds();\r\n\t\treturn (yy+'-'+(mm>=10?mm:'0'+mm)+'-'+(dd>=10?dd:'0'+dd)+' '\r\n\t\t\t\t\t+(hh>=10?hh:'0'+hh)+':'+(min>=10?min:'0'+min)/*+':'+(ss>=10?ss:'0'+ss)*/);\r\n\t}\r\n\r\n\tfunction getTimeDifference(timestamp1, timestamp2) {\r\n\t\tvar result = 0;\r\n\t\tif(timestamp1 >= timestamp2) {\r\n\t\t\tresult = timestamp1 - timestamp2;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// function for noobs.\r\n\tfunction secondsToHrsAndMins(second) {\r\n\t\tvar hours = Math.floor(second / 3600);\r\n\t\tvar mins = Math.floor(second / 60) - (hours * 60);\r\n\t\treturn (hours+` ${t('HOUR')} `+mins+` ${t('MINUTE')}`);\r\n\t}\r\n\r\n\tasync function getAllRecord() {\r\n\t\tlet response = await fetch(\"https://cronpublic.yasushi.me/record.json\");\r\n\t\tlet data = await response.json();\r\n\t\treturn data;\r\n\t}\r\n\r\n\tfunction updateRoundMaxPt() {\r\n\t\tif(rowRecord === [[]])\r\n\t\t\treturn;\r\n\t\tlet maxPt = 0;\r\n\t\tfor(let i = 0; i < rowRecord.length - 1; i++) {\r\n\t\t\tfor(let j = 0; j < rowRecord[i].length; j++) {\r\n\t\t\t\tif(rowRecord[i][j].userId === rowRecord[i + 1][j].userId) {\r\n\t\t\t\t\tlet newMax = (rowRecord[i][j].point - rowRecord[i + 1][j].point);\r\n\t\t\t\t\tif(maxPt < newMax)\r\n\t\t\t\t\t\tmaxPt = newMax;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetRoundMaxPt(maxPt);\r\n\t\tconsole.log(\"Round max pt: \"+roundMaxPt);\r\n\t\t// return maxPt;\r\n\t}\r\n\r\n  function getSpecificIdRecord(array, userId) {\r\n    let res = [];\r\n    if(!array || array.length === 0)\r\n      return null;\r\n    for(let i = 0; i < array.length; i++) {\r\n      for(let j = 0; j < array[i].length; j++) {\r\n        if(array[i][j].userId === userId) \r\n          res.push(array[i][j].point);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function getActualRoundWithId(userId) {\r\n    let res = [];\r\n    res = getSpecificIdRecord(rowRecord, userId);\r\n    return new Set(res).size - 1;\r\n  }\r\n  \r\n  function getPointDiffInPeriod(userId, minutes) {\r\n    let res = 0, latest_pt = 0, past_target_pt = 0, rec = [];\r\n    // Unable to get difference more than 60 minutes.\r\n    if(minutes > rowRecord.length && minutes > 60) {\r\n\t\t  return res;\r\n\t  } \r\n\t  else {\r\n      /** Fix calculation */\r\n      rec = getSpecificIdRecord(rowRecord, userId);\r\n      if(rec != null) {\r\n        // Latest point of this userId\r\n        latest_pt = rec[0];\r\n        // To prevent get exceeded index from this array.\r\n        if(minutes > rec.length-1) {\r\n          past_target_pt = rec[rec.length - 1];\r\n        } \r\n        else {\r\n          past_target_pt = rec[minutes];\r\n        }\r\n        res = latest_pt - past_target_pt;\r\n      }\r\n      return res;\r\n\t  }\r\n  }\r\n\r\n\tconst updateAllData = useCallback(() => {\r\n\t\tgetAllRecord()\r\n\t\t.then(res =>\r\n\t\t\tres.map(item => {\r\n\t\t\t\treturn item.map(top => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tuserId: top.userId,\r\n\t\t\t\t\t\tpoint: top.point\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t}) \r\n\t\t)\r\n\t\t.then(records => setRowRecord(records))\r\n\t}, []);\r\n\r\n\tconst onChangeLanguage = () => {\r\n\t\tsetColumnDefs(colDef);\r\n\t} \r\n\t\r\n  const onChangeDarkMode = (e) => {\r\n\t\tsetDarkMode(e.target.checked);\r\n\t\tsetColumnDefs(colDef);\r\n  }\r\n\t\r\n  useEffect(() => {\r\n\t\t// Call for first time without delay.\r\n\t\tupdateAllData();\r\n\t\t// updateRoundMaxPt();\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\t// Loop from second request.\r\n\t\t\tupdateAllData();\r\n\t\t}, 59000);\r\n\t\treturn () => clearInterval(interval);\r\n  }, [updateAllData, rowRecord]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"eventdetail left2\">\r\n\t\t\t\t<h5>\r\n\t\t\t\t\t{t('MAX_PT')}: <b>{roundMaxPt}</b>、{t('FASTEST_RND')}: <b>{fastestRound} 秒</b><br/>\r\n\t\t\t\t\t{t('EVENT_PROGRESS')}: <b>{secondsToHrsAndMins(eventProgressed)}</b> ({t('EVENT_TIME_LEFT')}: <b>{secondsToHrsAndMins((eventDuration * 60 * 60) - eventProgressed)}</b>)\r\n\t\t\t\t</h5>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"eventdetail right2\">\r\n\t\t\t\t<DarkModeBtn \r\n\t\t\t\t\tchecked={darkMode}\r\n\t\t\t\t\tonChange={onChangeDarkMode}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<EventProgress \r\n\t\t\t\t\tnow={((eventProgressed / getTimeDifference(data.endAt, data.startAt)) * 100.0)}\r\n\t\t\t\t\tlabel={`${((eventProgressed / getTimeDifference(data.endAt, data.startAt)) * 100.0).toFixed(1)}%`}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"grid\">\r\n\t\t\t\t<div \r\n\t\t\t\t\tid=\"myGrid\" \r\n\t\t\t\t\tclassName={darkMode?\"ag-theme-alpine-dark\":\"ag-theme-alpine\"} \r\n\t\t\t\t\tstyle={{ height: \"500px\", width: \"95%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AgGridReact\r\n\t\t\t\t\t\tcolumnDefs={columnDefs}\r\n\t\t\t\t\t\trowData={getTop10Data(data)}\r\n\t\t\t\t\t\tonGridReady={onGridReady}\r\n\t\t\t\t\t\tonRowClicked={null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h6>{t('LAST_UPDATE')}: {formattedTimestamp}</h6>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import React, { Component, createRef } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RankingTop10 from './RankingTop10';\r\nimport { Trans, withTranslation } from 'react-i18next';\r\n \r\nclass Ranking extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      eventDetail: [],\r\n      maintainenceHr: 0.00,\r\n      darkMode: true,\r\n      trackingIDs: [\r\n        {id: 0, gameId: 0, name: \"\"}, \r\n        {id: 1, gameId: 0, name: \"\"}, \r\n        {id: 2, gameId: 0, name: \"\"}, \r\n        {id: 3, gameId: 0, name: \"\"}, \r\n        {id: 4, gameId: 0, name: \"\"},\r\n        {id: 5, gameId: 0, name: \"\"}\r\n      ],\r\n    };\r\n    this.top10Ref = createRef();\r\n  }\r\n\r\n  onChangeLanguage = () => {\r\n    console.log(\"onChangeLanguage in Ranking.js has been called!\");\r\n    this.top10Ref.current.onChangeLanguage();\r\n  }\r\n\r\n  getAllData = async() => {\r\n\t\tlet response = await fetch(\"https://cronpublic.yasushi.me/ranking.json\");\r\n\t\tlet data = await response.json();\r\n\t\treturn data;\r\n  }\r\n\r\n  updateAllData = () => {\r\n\t\t// This is an async function.\r\n\t\tthis.getAllData()\r\n\t\t.then(res => {\r\n\t\t\treturn {\r\n\t\t\t\tlastModified: res.lastModified,\r\n        topUsers: res.topUsers,\r\n        eventId: res.eventId,\r\n        eventName: res.eventName,\r\n        startAt: res.startAt,\r\n        endAt: res.endAt,\r\n        startDate: this.timestampToDate(res.startAt),\r\n        startTime: this.timestampToTime(res.startAt),\r\n        eventDurationHr: Math.round((res.endAt - res.startAt) / (60 * 60))\r\n\t\t\t};\r\n\t\t})\r\n    .then(ranks => this.setState({ eventDetail: ranks }));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Call for first time without delay.\r\n    this.updateAllData();\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\t// Loop from second request.\r\n      this.updateAllData();\r\n\t\t}, 59000);\r\n\t\treturn () => clearInterval(interval);\r\n  }\r\n\r\n  // Reason why is because the number won't update imeediately if we use update function\r\n  timestampToDate(timestamp) {\r\n    var fullDate = new Date(timestamp * 1000);\r\n    var date = fullDate.getFullYear()\r\n      +\"-\"+((fullDate.getMonth()+1)<10?\"0\"+(fullDate.getMonth()+1):(fullDate.getMonth()+1))\r\n      +\"-\"+(fullDate.getDate()<10?\"0\"+fullDate.getDate():fullDate.getDate());\r\n    return date;\r\n  }\r\n\r\n  timestampToTime(timestamp) {\r\n    var fullDate = new Date(timestamp * 1000);\r\n    var time = (fullDate.getHours()<10?\"0\"+fullDate.getHours():fullDate.getHours())\r\n      +\":\"+(fullDate.getMinutes()<10?\"0\"+fullDate.getMinutes():fullDate.getMinutes());\r\n    return time;\r\n  }\r\n\r\n  onTrackIDChange(id, e) {\r\n    var index = this.state.trackingIDs.findIndex(x => x.id === id);\r\n    if (index !== -1) {\r\n      // console.log(\"field game_id id: \"+index, \"val: \"+e.target.value);\r\n      let temp = [...this.state.trackingIDs];\r\n      temp[index].gameId = parseInt(e.target.value);\r\n      this.setState({\r\n        trackingIDs: [\r\n          ...temp\r\n          //  ...this.state.trackingIDs.slice(0, index),\r\n          //  Object.assign({}, this.state.trackingIDs[index], {id: e.target.value}),\r\n          //  ...this.state.trackingIDs.slice(index + 1)\r\n        ]\r\n      });\r\n      // console.log(this.state.trackingIDs[index]);\r\n    }\r\n    else {\r\n      console.log(\"Nothing match (game id field).\")\r\n    }\r\n  }\r\n\r\n  onTrackNameChange(id, e) {\r\n    var index = this.state.trackingIDs.findIndex(x => x.id === id);\r\n    if (index !== -1) {\r\n      // console.log(\"field name id: \"+index, \"val: \"+e.target.value);\r\n      let temp = [...this.state.trackingIDs];\r\n      temp[index].name = e.target.value;\r\n      this.setState({\r\n        trackingIDs: [...temp]\r\n      });\r\n      // console.log(this.state.trackingIDs[index]);\r\n    }\r\n    else {\r\n      console.log(\"Nothing match (name field).\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <div>\r\n            <h2 style={{ fontStyle:\"italic\" }}>TOP 10 - <b>{this.state.eventDetail.eventName} ({this.state.eventDetail.eventId})</b></h2>\r\n            <h4>\r\n              <Trans>START_DATE</Trans>: <b>{this.state.eventDetail.startDate} </b> \r\n              | <Trans>EV_DURATION</Trans>: <b>{this.state.eventDetail.eventDurationHr} <Trans>HOUR</Trans></b>\r\n            </h4>\r\n            <RankingTop10\r\n              data={this.state.eventDetail}\r\n              trackData={this.state.trackingIDs}\r\n              eventStartTimestamp={this.state.eventDetail.startAt}\r\n              eventDuration={this.state.eventDetail.eventDurationHr}\r\n              maintainenceHr={this.state.maintainenceHr}\r\n              ref={this.top10Ref}\r\n            />\r\n          </div>\r\n          <div className=\"trackDetail left\">\r\n            {this.state.trackingIDs.map((tracking, i) => (\r\n              <div>\r\n                <TextField\r\n                  label=\"玩家ID\"\r\n                  type=\"number\"\r\n                  style={{ background: \"white\", borderRadius: \"5px\" }}\r\n                  defaultValue={tracking.gameId}\r\n                  onChange={i, e => this.onTrackIDChange(i, e)}\r\n                  name={\"track_id\"+i}\r\n                  variant=\"filled\"\r\n                  margin=\"dense\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                &nbsp;\r\n                <TextField\r\n                  label=\"自行更改暱稱\"\r\n                  style={{ background: \"white\", borderRadius: \"5px\" }}\r\n                  defaultValue={tracking.name}\r\n                  onChange={i, e => this.onTrackNameChange(i, e)}\r\n                  name={\"track_name\"+i}\r\n                  variant=\"filled\"\r\n                  margin=\"dense\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"trackDetail right\">\r\n            <h1>Multi-axis chart</h1><br/>\r\n            <h1>Multi-axis chart</h1><br/>\r\n            <h1>Multi-axis chart</h1>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Ranking);","import React, { Component } from \"react\";\r\nimport abcsleep from '../background/abcsleep.png';\r\n \r\nclass Rankingtips extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>排名攻略</h2>\r\n        <div>\r\n          <img src={abcsleep} atl=\"\" width=\"50%\" />\r\n        </div>\r\n        <h2>學青葉ＡＢＣ不睡覺就可以了。</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rankingtips;","import React, { Component } from 'react';\r\n \r\nclass Joke extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>梗/梗圖/母湯發言</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Joke;","import React, { Component } from 'react';\r\nimport aboutLZ from './aboutlz.png'\r\nclass AboutLZ extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"aboutLZ\">\r\n        <h2>關於LZ？就是這樣而已。</h2>\r\n        <div>\r\n          <img src={aboutLZ} atl=\"\" width=\"80%\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutLZ;","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n \r\nconst LangSelector = (props) => {\r\n  const { i18n } = useTranslation();\r\n  const [selectedLang, setSelectedLang] = useState('zh');\r\n \r\n  const changeLanguage = (event) => {\r\n    setSelectedLang(event.target.value);\r\n    i18n.changeLanguage(event.target.value);\r\n    props.onChange(event);\r\n  }\r\n \r\n  return (\r\n    <div onChange={changeLanguage}>\r\n      <h6 style={{ textAlign: \"right\" }}>\r\n        <label className=\"mr10\">\r\n          <input type=\"radio\" value=\"zh\" name=\"language\" checked={selectedLang === 'zh'} /> 正體中文\r\n        </label>\r\n        &nbsp;&nbsp;\r\n        <label>\r\n          <input type=\"radio\" value=\"jp\" name=\"language\" checked={selectedLang === 'jp'} /> 日本語\r\n        </label>\r\n        &nbsp;&nbsp;\r\n        <label>\r\n          <input type=\"radio\" value=\"en\" name=\"language\" checked={selectedLang === 'en'} /> English\r\n        </label>\r\n      </h6>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default LangSelector;","import React, { useRef } from 'react';\r\nimport { Route, NavLink, HashRouter } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Ranking from './Ranking';\r\nimport Rankingtips from './Rankingtips';\r\nimport Joke from './Joke';\r\nimport AboutLZ from './AboutLZ';\r\n// import Recommend from './Recommend';\r\n// import Login from './Login';\r\nimport { useTranslation } from 'react-i18next';\r\nimport LangSelector from './LangSelector';\r\n \r\nconst Main = () => {\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const RankingRef = useRef(Ranking);\r\n\r\n  const onChangeLanguage = (e) => {\r\n    // console.log(\"Language Changed!\");\r\n    // RankingRef.current.onChangeLanguage();\r\n  }\r\n  return (\r\n    <HashRouter>\r\n      <div>\r\n        <ul className=\"header\">\r\n          <li key={1}><NavLink exact to=\"/\">{t('MAIN_PAGE')}</NavLink></li>\r\n          <li key={2}><NavLink to=\"/ranking\">{t('TOP10')}</NavLink></li>\r\n          <li key={3}><NavLink to=\"/rankingtips\">{t('RANK_TIPS')}</NavLink></li>\r\n          <li key={4}><NavLink to=\"/jokes\">{t('MEMES')}</NavLink></li>\r\n          <li key={5}><NavLink to=\"/aboutlz\">{t('ABOUT_LZ')}</NavLink></li>\r\n          {/* <li key={6}><NavLink to=\"/recommend\">系統建議</NavLink></li> */}\r\n          {/* <li value='lang_selector'><LangSelector/></li> */}\r\n          {/* <li><NavLink to=\"/login\">登入</NavLink></li> */}\r\n        </ul>\r\n        <LangSelector onChange={onChangeLanguage} />\r\n        <div className=\"content\">\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route path=\"/ranking\" component={Ranking} ref={RankingRef} />\r\n          <Route path=\"/rankingtips\" component={Rankingtips}/>\r\n          <Route path=\"/jokes\" component={Joke}/>\r\n          <Route path=\"/aboutlz\" component={AboutLZ}/>\r\n          {/* <Route path=\"/recommend\" component={Recommend}/> */}\r\n          {/* <Route path=\"/login\" component={Login}/> */}\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n \r\nexport default Main;","import React from 'react';\nimport \"./index.css\";\nimport Main from './component/Main.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from '../actions/ActionTypes';\r\n\r\n// []\r\n\r\nconst loginReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.LOGIN:\r\n            return {\r\n                isLoggedIn: true,\r\n                username: action.payload.username,\r\n                userlevel: action.payload.userlevel\r\n            };\r\n        case actions.LOGOUT:\r\n            return {\r\n                isLoggedIn: false,\r\n                username: '',\r\n                userlevel: -1\r\n            };\r\n        default:\r\n            return {\r\n                isLoggedIn: false,\r\n                username: '',\r\n                userlevel: -1\r\n            };\r\n    }\r\n};\r\n\r\nexport default loginReducer;","// update the action names only in here.\r\nexport const LOGIN = 'login';\r\nexport const LOGOUT = 'logout';","import loginReducer from './isLoggedIn';\r\n// You can import more here...\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    login: loginReducer\r\n    //... you can add more here..\r\n})\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from './reducers'; // auto find index.js\r\n\r\nconst store = createStore(allReducers);\r\n\r\nexport default store;","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n \r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n \r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    lng: 'zh',\r\n    backend: {\r\n      /* translation file path */\r\n      loadPath: '/assets/i18n/{{ns}}/{{lng}}.json'\r\n    },\r\n    fallbackLng: 'zh',\r\n    debug: true,\r\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: ','\r\n    },\r\n    react: {\r\n      wait: true\r\n    }\r\n  });\r\n \r\nexport default i18n;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\";\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './i18n';\n\n// This is called every time the state of the store is changed\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"Store state changed!: \", store.getState());\n// });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<span>Loading...</span>}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/abcsleep.d0d1a35a.png\";","module.exports = __webpack_public_path__ + \"static/media/aboutlz.0d9b582b.png\";"],"sourceRoot":""}