{"version":3,"sources":["component/Home.js","component/RankingTop10.js","component/EventDetail.js","stores/UserStore.js","component/Ranking.js","component/Rankingtips.js","component/Joke.js","component/AboutLZ.js","component/Recommend.js","component/LoginForm.js","component/Login.js","component/Main.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","RankingTop10","eventStartTimestamp","eventDuration","roundMaxPt","fastestRound","maintainenceHr","useState","rawData","setRawData","rowRecord","setRowRecord","setGridApi","formattedTimestamp","timestamp","dateobj","Date","yy","getFullYear","mm","getMonth","dd","getDate","hh","getHours","min","getMinutes","timestampToDateTime","lastModified","eventProgressed","timestamp1","timestamp2","result","getTimeDifference","headerName","field","sortable","filter","maxWidth","minWidth","valueFormatter","numberFormatter","cellStyle","params","node","data","rank","val","value","color","fontWeight","setDiffLastRoundCellStyle","factor","time_str","res","split","hrs","parseInt","fromTimeStrToMin","setCatchTimeCellStyle","setPointCellStyle","columnDefs","Math","floor","toString","replace","secondsToHrsAndMins","second","hours","a","fetch","response","json","getSpecificIdRecord","array","userId","length","i","j","push","point","getActualRoundWithId","Set","size","getPointDiffInPeriod","minutes","rec","updateAllData","getAllData","then","topUsers","ranks","getAllRecord","map","item","top","records","useEffect","interval","setInterval","clearInterval","ProgressBar","animated","now","class","id","className","style","height","width","rowData","top10","name","rankLevel","introduction","userDeck","bonus","diff_1st","diff_last","diff_last_round","ceil","catch_time","point_per_hour","round_per_hour","toFixed","point_10mins","point_30mins","point_60mins","rest","playerId","valid_round","speed_in_theory","getTop10Data","onGridReady","api","EventDetail","eventTitle","setEventDetail","event_Title","eventStartTS","eventDur","roundMaxPoint","fastestRd","maintainHr","classes","makeStyles","theme","root","alignItems","heading","fontSize","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","smallcol","midcol","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","useStyles","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","FormControl","fullWidth","margin","InputLabel","htmlFor","Input","defaultValue","onChange","event","target","TextField","label","type","InputLabelProps","shrink","inputProps","max","step","parseFloat","dt","convertTSForDatePicker","datum","getTime","console","log","textField","Divider","ExpansionPanelActions","Button","onClick","extendObservable","this","loading","isLoggedIn","username","userlevel","Ranking","props","state","eventStartDate","eventStartTime","eventDurationHr","fastestRoundSec","date","time","res2","year","month","day","hour","includes","UTC","UserStore","marginTop","dayTimeToTimestamp","Rankingtips","Joke","AboutLZ","Recommend","LoginForm","onUsernameFieldChange","setState","resetDisabled","onPasswordFieldChange","password","onClickShowPassword","showPassword","onMouseDownPassword","preventDefault","resetForm","loginDisabled","display","flexWrap","border","overflow","borderRadius","backgroundColor","transition","transitions","create","borderColor","withoutLabel","method","headers","body","JSON","stringify","success","alert","msg","placeholder","variant","disabled","doLogin","Login","doLogout","observer","Main","exact","to","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa9e8aa5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n \r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>安安。你來錯地方了。</h2>\r\n        <p>這裡是LZ，我們啥都幹 - <br/>\r\n            幹榜幹房幹按鈕幹人和幹人老婆。<br/>\r\n            只要是為了要跑者不睡覺我們啥都幹得出來。<br/>\r\n            我們還有獨特的迫害文化，讓你進群1分鐘馬上懷疑人生。\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nexport default function RankingTop10({eventStartTimestamp, eventDuration, roundMaxPt, fastestRound, maintainenceHr}) {\r\n\r\n\tconst [rawData, setRawData] = useState([]);\r\n\tconst [rowRecord, setRowRecord] = useState([[]]);\r\n\t//const [rowData, setRowData] = useState([]);\r\n\tconst [gridApi, setGridApi] = useState(null);\r\n\r\n\t// var gridData = [];\r\n\tvar formattedTimestamp = timestampToDateTime(rawData.lastModified);\r\n\t// var formattedTimestamp = new Date(rawData.lastModified * 1000).toLocaleString(\"en-US\");\r\n\tvar eventProgressed = getTimeDifference(rawData.lastModified, eventStartTimestamp);\r\n\t// var trackingIDs = [\r\n\t// \t{ id: 0, name: null },\r\n\t// \t{ id: 0, name: null },\r\n\t// \t{ id: 0, name: null },\r\n\t// \t{ id: 0, name: null },\r\n\t// \t{ id: 0, name: null }\r\n\t// ];\r\n\r\n\tconst [columnDefs, setColumnDefs] = useState([\r\n\t\t\t{ headerName: \"Top\", field: \"rank\", sortable: true, filter: \"agNumberColumnFilter\", maxWidth: 80 },\r\n\t\t\t{ headerName: \"ID\", field: \"name\", sortable: true, filter: \"agTextColumnFilter\", minWidth: 130 },\r\n\t\t\t{ headerName: \"イベントpt\", field: \"point\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 120 },\r\n\t\t\t{ headerName: \"ボーナス\", field: \"bonus\", sortable: true, filter: false, maxWidth: 100 },\r\n\t\t\t{ headerName: \"1位差\", field: \"diff_1st\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 110 },\r\n\t\t\t{ headerName: \"前位差\", field: \"diff_last\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 110 },\r\n\t\t\t{ headerName: \"前位回数差\", field: \"diff_last_round\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setDiffLastRoundCellStyle(params), maxWidth: 120 },\r\n\t\t\t{ headerName: \"追撃時間\", field: \"catch_time\", sortable: true, filter: false, cellStyle: params => setCatchTimeCellStyle(params, 60), maxWidth: 150 },\r\n\t\t\t{ headerName: \"pt時速\", field: \"point_per_hour\", sortable: true, filter: false, valueFormatter: numberFormatter, maxWidth: 100 },\r\n\t\t\t{ headerName: \"周回時速\", field: \"round_per_hour\", sortable: true, filter: false, maxWidth: 100 },\r\n\t\t\t{ headerName: \"pt/10分\", field: \"point_10mins\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setPointCellStyle(params, roundMaxPt), maxWidth: 100 },\r\n\t\t\t{ headerName: \"pt/30分\", field: \"point_30mins\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setPointCellStyle(params, roundMaxPt * 3), maxWidth: 100 },\r\n\t\t\t{ headerName: \"pt/60分\", field: \"point_60mins\", sortable: true, filter: false, valueFormatter: numberFormatter, cellStyle: params => setPointCellStyle(params, roundMaxPt * 6), maxWidth: 100 },\r\n      { headerName: \"休憩(min)\", field: \"rest\", sortable: true, filter: false, maxWidth: 100 },\r\n      //{ headerName: \"玩家ID\", field: \"playerId\", sortable: true, filter: false, maxWidth: 120 } \r\n      { headerName: \"有效場次/hr\", field: \"valid_round\", sortable: true, filter: false, maxWidth: 120 },\r\n      { headerName: \"瞬間時速\", field: \"speed_in_theory\", sortable: true, filter: false, maxWidth: 100 },\r\n      //{ headerName: \"吐槽\", field: \"comment\", sortable: true, filter: false, maxWidth: 100 },\r\n  ]);\r\n\r\n  function setDiffLastRoundCellStyle(params) {\r\n    // Do not render style for Rank 1st\r\n    if(params.node.data.rank === 1) // WTF am I doing??\r\n      return null;\r\n    let val = params.value;\r\n    if(val < -85) {\r\n      return {color: '#99cc33', fontWeight: 'bold' /*, backgroundColor: '#b7e1cd'*/ }; // light green\r\n    }\r\n    else if(val <- 30 && val >= -85) {\r\n      return {color: '#ffcc00', fontWeight: 'bold'/*, backgroundColor: '#fce8b2'*/ }; // light yellow\r\n    }\r\n    else if(val >= -30) {\r\n      return {color: '#ff9966', fontWeight: 'bold'/*, backgroundColor: '#f4c7c3'*/ }; // light red\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  // factor is minute\r\n  function setCatchTimeCellStyle(params, factor) {\r\n    // Do not render style for Rank 1st\r\n    if(params.node.data.rank === 1) // WTF am I doing??\r\n      return null;\r\n    let val = fromTimeStrToMin(params.value);\r\n    if(val > factor * 3) {\r\n      return {color: '#99cc33', fontWeight: 'bold' /*, backgroundColor: '#b7e1cd'*/}; // light green\r\n    }\r\n    else if(val > factor && val <= factor * 3) {\r\n      return {color: '#ffcc00', fontWeight: 'bold' /*, backgroundColor: '#fce8b2'*/}; // light yellow\r\n    }\r\n    else if(val >= 0 && val <= factor) {\r\n      return {color: '#ff9966', fontWeight: 'bold' /*, backgroundColor: '#f4c7c3'*/}; // light red\r\n    }\r\n    else return null;\r\n  }\r\n  \r\n  function setPointCellStyle(params, factor) {\r\n    let val = params.value;\r\n    if(val >= factor * 5) {\r\n      return {color: 'red', fontWeight: 'bold' /*, backgroundColor: 'red'*/};\r\n    }\r\n    else if(val >= factor * 3 && val < factor * 5) {\r\n      return {color: '#ff9966', fontWeight: 'bold' /*, backgroundColor: '#f4c7c3'*/}; // light red\r\n    }\r\n    else if(val >= factor && val < factor * 3) {\r\n      return {color: '#ffcc00', fontWeight: 'bold' /*, backgroundColor: '#fce8b2'*/}; // light yellow\r\n    }\r\n    else if(val >= 0 && val < factor) {\r\n      return {color: '#99cc33', fontWeight: 'bold' /*, backgroundColor: '#b7e1cd'*/}; // light green\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  function fromTimeStrToMin(time_str) {\r\n    let res = time_str.split(\" 小時 \");\r\n    let hrs = parseInt(res[0]); // hrs\r\n    let min = parseInt(res[1]);\r\n    return (hrs * 60 + min);\r\n  }\r\n\r\n\tfunction numberFormatter(params) {\r\n\t\t\t// this puts commas into the number eg 1000 goes to 1,000,\r\n\t\t\t// i pulled this from stack overflow, i have no idea how it works\r\n\t\t\treturn Math.floor(params.value).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n\t}\r\n\r\n\tfunction getTop10Data(data) {\r\n\t\t//console.log(\"getTop10 called\");\r\n\t\t//console.log(data);\r\n\t\tlet result = [];\r\n\t\tif(data.topUsers) {\r\n\t\t\tlet top10 = data.topUsers;\r\n\t\t\t//console.log(top10.length);\r\n\t\t\tfor (var i = 0; i < top10.length; i++) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\trank: top10[i].rank,\r\n\t\t\t\t\tname: top10[i].name,\r\n\t\t\t\t\trankLevel: top10[i].rankLevel,\r\n\t\t\t\t\tintroduction: top10[i].introduction,\r\n\t\t\t\t\tuserId: top10[i].userId,\r\n\t\t\t\t\tpoint: top10[i].point,\r\n\t\t\t\t\tuserDeck: top10[i].userDeck, // deck of this top player.\r\n\t\t\t\t\tbonus: 0, // need to implement\r\n\t\t\t\t\tdiff_1st: (i > 0 ? (top10[i].point - top10[0].point) : 0),\r\n\t\t\t\t\tdiff_last: (i > 0 ? (top10[i].point - top10[i - 1].point) : 0),\r\n\t\t\t\t\tdiff_last_round: (i > 0 ? Math.ceil((top10[i - 1].point - top10[i].point) / roundMaxPt)*-1 : 0),\r\n\t\t\t\t\tcatch_time: secondsToHrsAndMins(i > 0 ? Math.ceil((top10[i - 1].point - top10[i].point) / roundMaxPt * fastestRound) : 0),\r\n\t\t\t\t\tpoint_per_hour: (top10[i].point / ((eventProgressed - maintainenceHr * 3600) > 0 ? (eventProgressed - maintainenceHr * 3600) / 3600 : (eventProgressed / 3600))),\r\n\t\t\t\t\tround_per_hour: (top10[i].point / ((eventProgressed - maintainenceHr * 3600) > 0 ? (eventProgressed - maintainenceHr * 3600) / 3600 : (eventProgressed / 3600)) / roundMaxPt).toFixed(3),\r\n\t\t\t\t\tpoint_10mins: getPointDiffInPeriod(top10[i].userId, 10),\r\n\t\t\t\t\tpoint_30mins: getPointDiffInPeriod(top10[i].userId, 30),\r\n\t\t\t\t\tpoint_60mins: getPointDiffInPeriod(top10[i].userId, 60),\r\n\t\t\t\t\trest: 0, // need to change\r\n          playerId: top10[i].userId,\r\n          valid_round: getActualRoundWithId(top10[i].userId),\r\n          speed_in_theory: (getPointDiffInPeriod(top10[i].userId, 60) / roundMaxPt).toFixed(2)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction timestampToDateTime(timestamp) {\r\n\t\tvar dateobj = new Date(timestamp * 1000);\r\n\t\tvar yy = dateobj.getFullYear();\r\n\t\tvar mm = dateobj.getMonth()+1;\r\n\t\tvar dd = dateobj.getDate();\r\n\t\tvar hh = dateobj.getHours();\r\n\t\tvar min = dateobj.getMinutes();\r\n\t\t//var ss = dateobj.getSeconds();\r\n\t\treturn (yy+'-'+(mm>=10?mm:'0'+mm)+'-'+(dd>=10?dd:'0'+dd)+' '\r\n\t\t\t\t\t+(hh>=10?hh:'0'+hh)+':'+(min>=10?min:'0'+min)/*+':'+(ss>=10?ss:'0'+ss)*/);\r\n\t}\r\n\r\n\tfunction getTimeDifference(timestamp1, timestamp2) {\r\n\t\tvar result = 0;\r\n\t\tif(timestamp1 >= timestamp2) {\r\n\t\t\tresult = timestamp1 - timestamp2;\r\n\t\t} \r\n\t\t// else {\r\n\t\t// \tresult = timestamp2 - timestamp1\r\n\t\t// }\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// function for noobs.\r\n\tfunction secondsToHrsAndMins(second) {\r\n\t\tvar hours = Math.floor(second / 3600);\r\n\t\tvar mins = Math.floor(second / 60) - (hours * 60);\r\n\t\treturn (hours+\" 小時 \"+mins+\" 分鐘\");\r\n\t}\r\n\r\n  function onGridReady(params) {\r\n\t\tsetGridApi(params.api);\r\n\t\t// params.api.sizeColumnsToFit();\r\n\r\n\t\t// var columnAPI = params.columnApi;\r\n\t\t// var allColumnIds = [];\r\n    // columnAPI.getAllColumns().forEach(function(column) {\r\n    //   allColumnIds.push(column.colId);\r\n    // });\r\n    // columnAPI.autoSizeColumns(allColumnIds, false);\r\n\t}\r\n\r\n\t// // not yet implemented\r\n\t// function updateTrackingID(event, id) {\r\n\t// \tvar val = event.target.value;\r\n\t// \tif(isNaN(val)) {\r\n\r\n\t// \t}\r\n\t// \ttrackingIDs[id].id = parseInt(event.target.value);\r\n\t// }\r\n\r\n\tasync function getAllRecord() {\r\n\t\tlet response = await fetch(\"https://cronpublic.yasushi.me/record.json\");\r\n\t\tlet data = await response.json();\r\n\t\t// console.log(data);\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync function getAllData() {\r\n\t\tlet response = await fetch(\"https://cronpublic.yasushi.me/ranking.json\");\r\n\t\tlet data = await response.json();\r\n\t\t//console.log(data);\r\n\t\treturn data;\r\n  }\r\n\r\n  function getSpecificIdRecord(array, userId) {\r\n    let res = [];\r\n    if(!array || array.length === 0)\r\n      return null;\r\n    for(var i = 0; i < array.length; i++) {\r\n      for(var j = 0; j < array[i].length; j++) {\r\n        if(array[i][j].userId === userId) \r\n          res.push(array[i][j].point);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function getActualRoundWithId(userId) {\r\n    let res = [];\r\n    res = getSpecificIdRecord(rowRecord, userId);\r\n    return new Set(res).size - 1;\r\n  }\r\n  \r\n  function getPointDiffInPeriod(userId, minutes) {\r\n    let res = 0, latest_pt = 0, past_target_pt = 0, rec = [];\r\n    // Unable to get difference more than 60 minutes.\r\n    if(minutes > rowRecord.length && minutes > 60) {\r\n\t\t  return res;\r\n\t  } \r\n\t  else {\r\n      /** Fix calculation */\r\n      rec = getSpecificIdRecord(rowRecord, userId);\r\n      if(rec != null) {\r\n        // Latest point of this userId\r\n        latest_pt = rec[0];\r\n        // To prevent get exceeded index from this array.\r\n        if(minutes > rec.length-1) {\r\n          past_target_pt = rec[rec.length - 1];\r\n        } \r\n        else {\r\n          past_target_pt = rec[minutes];\r\n        }\r\n        res = latest_pt - past_target_pt;\r\n      }\r\n      return res;\r\n\t  }\r\n  }\r\n\r\n\tfunction updateAllData() {\r\n\t\t// This is an async function.\r\n\t\tgetAllData()\r\n\t\t.then(res => {\r\n\t\t\treturn {\r\n\t\t\t\tlastModified: res.lastModified,\r\n\t\t\t\ttopUsers: res.topUsers\r\n\t\t\t};\r\n\t\t})\r\n    .then(ranks => setRawData(ranks));\r\n    \r\n    // This is an async function.\r\n    // DLLM都唔知寫左乜春。\r\n\t\tgetAllRecord()\r\n\t\t.then(res =>\r\n\t\t\tres.map(item => {\r\n        return item.map(top => {\r\n          return {\r\n            userId: top.userId,\r\n            point: top.point\r\n          };\r\n        })\r\n\t\t\t}) \r\n\t\t)\r\n\t\t.then(records => setRowRecord(records));\r\n\t}\r\n\t\r\n  useEffect(() => {\r\n\t\t// Call for first time without delay.\r\n\t\tupdateAllData();\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\t// Loop from second request.\r\n\t\t\tupdateAllData();\r\n\t\t}, 59000);\r\n\t\treturn () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  //console.log(rowRecord);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t{/* <h4>最終更新日時: {formattedTimestamp}</h4> */}\r\n\t\t\t\t{/* <h5>dump: {eventStartTimestamp}, {eventDuration}, {roundMaxPt}, {fastestRound} </h5> */}\r\n\t\t\t\t<h5>活動進度: {secondsToHrsAndMins(eventProgressed)} (剩餘: {secondsToHrsAndMins((eventDuration * 60 * 60) - eventProgressed)})\r\n\t\t\t\t</h5>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<ProgressBar animated now={95} />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div id=\"myGrid\" className=\"ag-theme-alpine-dark\" \r\n\t\t\t\tstyle={{ height: \"500px\", width: \"95%\" }}>\r\n\t\t\t\t\t<AgGridReact\r\n\t\t\t\t\t\tcolumnDefs={columnDefs}\r\n\t\t\t\t\t\trowData={getTop10Data(rawData)}\r\n\t\t\t\t\t\tonGridReady={onGridReady}\r\n\t\t\t\t\t\t// onRowClicked={}\r\n\t\t\t\t\t\t// pagination={true}\r\n\t\t\t\t\t\t// paginationPageSize={10}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h5>最終更新日時: {formattedTimestamp}</h5>\r\n\t\t\t</div>\r\n\t\t\t{/* <div>\r\n\t\t\t\t<h6>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t\t<td>顯示文字</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><input id=\"trackID1\" name=\"trackID1\" type=\"number\" onChange={updateTrackingID(0)} /></td>\r\n\t\t\t\t\t\t<td><input id=\"trackName1\" name=\"trackName1\" onChange={updateTrackingID(0)} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><input id=\"trackID2\" name=\"trackID2\" type=\"number\" onChange={updateTrackingID(1)} /></td>\r\n\t\t\t\t\t\t<td><input id=\"trackName2\" name=\"trackName2\" onChange={updateTrackingID(1)} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><input id=\"trackID3\" name=\"trackID3\" type=\"number\" onChange={updateTrackingID(2)} /></td>\r\n\t\t\t\t\t\t<td><input id=\"trackName3\" name=\"trackName3\" onChange={updateTrackingID(2)} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><input id=\"trackID4\" name=\"trackID4\" type=\"number\" onChange={updateTrackingID(3)} /></td>\r\n\t\t\t\t\t\t<td><input id=\"trackName4\" name=\"trackName4\" onChange={updateTrackingID(3)} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><input id=\"trackID5\" name=\"trackID5\" type=\"number\" onChange={updateTrackingID(4)} /></td>\r\n\t\t\t\t\t\t<td><input id=\"trackName5\" name=\"trackName5\" onChange={updateTrackingID(4)} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</form>\r\n\t\t\t\t</h6>\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState } from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import DateFnsUtils from '@date-io/date-fns'; \r\n// import {\r\n// \tMuiPickersUtilsProvider,\r\n// \tKeyboardTimePicker,\r\n//   KeyboardDatePicker,\r\n// } from '@material-ui/pickers';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\n// //import InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nexport default function EventDetail({eventTitle, eventStartTimestamp, eventDuration, roundMaxPt, fastestRound, maintainenceHr}) {\r\n\r\n\tconst [eventDetail, setEventDetail] = useState({\r\n\t\teventTitle, \r\n\t\teventStartTimestamp, \r\n\t\teventDuration, \r\n\t\troundMaxPt, \r\n\t\tfastestRound,\r\n\t\tmaintainenceHr\r\n\t});\r\n\t// const [event_Title, setEventTitle] = useState(eventTitle);\r\n\t// const [eventStartTS, setEventStartTS] = useState(eventStartTimestamp);\r\n\t// const [eventDur, setEventDur] = useState(eventDuration);\r\n\t// const [roundMaxPoint, setRoundMaxPoint] = useState(roundMaxPt);\r\n\t// const [fastestRd, setFastestRd] = useState(fastestRound);\r\n\r\n\tvar event_Title = eventTitle;\r\n\tvar eventStartTS = eventStartTimestamp;\r\n\tvar eventDur = eventDuration;\r\n\tvar roundMaxPoint = roundMaxPt;\r\n\tvar fastestRd = fastestRound;\r\n\tvar maintainHr = maintainenceHr;\r\n\r\n\t// This function is use to update parent component\r\n\tfunction onEventDetailChange(event) {\r\n\t\tsetEventDetail({\r\n\t\t\tevent_Title, \r\n\t\t\teventStartTS, \r\n\t\t\teventDur, \r\n\t\t\troundMaxPoint, \r\n\t\t\tfastestRd\r\n\t\t});\r\n\t}\r\n\r\n\t// Immediately Update So I don't want to use synchronized setState.\r\n\tfunction onEventTitleChange(event) {\r\n\t\tevent_Title = event.target.value;\r\n\t}\r\n\r\n\tfunction onEventStartTSChange(event) {\r\n\t\t//eventStartTS = event.target.value;\r\n\t\t var datum = new Date(event.target.value).getTime()/1000;\r\n\t\t console.log(datum);\r\n\t\t eventStartTS = datum;\r\n\t}\r\n\r\n\tfunction onEventDurationChange(event) {\r\n\t\teventDur = parseInt(event.target.value);\r\n\t}\r\n\r\n\tfunction onRoundMaxPointChange(event) {\r\n\t\troundMaxPoint = parseInt(event.target.value);\r\n\t}\r\n\r\n\tfunction onFastestRoundChange(event) {\r\n\t\tfastestRd = parseInt(event.target.value);\r\n\t}\r\n\r\n\tfunction onMaintainHrChange(event) {\r\n\t\tmaintainHr = parseFloat(event.target.value);\r\n\t}\r\n\r\n\tfunction convertTSForDatePicker(timestamp) {\r\n\t\tvar dt = new Date(timestamp * 1000);\r\n\t\tvar yy = dt.getFullYear();\r\n\t\tvar mm = dt.getMonth()+1;\r\n\t\tvar dd = dt.getDate();\r\n\t\tvar hh = dt.getHours();\r\n\t\tvar min = dt.getMinutes();\r\n\t\tvar result = (yy+'-'+(mm<10?'0'+mm:mm)+'-'+(dd<10?'0'+dd:dd)+'T'+(hh<10?'0'+hh:hh)+':'+(min<10?'0'+min:min));\r\n\t\t//console.log(result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\twidth: \"calc(240px + 30%)\",\r\n\t\t\talignItems: 'right'\r\n\t\t},\r\n\t\theading: {\r\n\t\t\tfontSize: theme.typography.pxToRem(15)\r\n\t\t},\r\n\t\tsecondaryHeading: {\r\n\t\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\t\tcolor: theme.palette.text.secondary\r\n\t\t},\r\n\t\ticon: {\r\n\t\t\tverticalAlign: \"bottom\",\r\n\t\t\theight: 20,\r\n\t\t\twidth: 20\r\n\t\t},\r\n\t\tdetails: {\r\n\t\t\talignItems: \"center\"\r\n\t\t},\r\n\t\tcolumn: {\r\n\t\t\tflexBasis: \"100%\"\r\n\t\t},\r\n\t\tsmallcol: {\r\n\t\t\tflexBasis: \"20%\"\r\n\t\t},\r\n\t\tmidcol: {\r\n\t\t\tflexBasis: \"30%\"\r\n\t\t},\r\n\t\thelper: {\r\n\t\t\tborderLeft: `2px solid ${theme.palette.divider}`,\r\n\t\t\tpadding: theme.spacing(1, 2)\r\n\t\t},\r\n\t\tlink: {\r\n\t\t\tcolor: theme.palette.primary.main,\r\n\t\t\ttextDecoration: \"none\",\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\ttextDecoration: \"underline\"\r\n\t\t\t}\r\n\t\t}\r\n\t}));\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<ExpansionPanel>\r\n\t\t\t\t<ExpansionPanelSummary\r\n\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\t\taria-controls=\"panel1a-content\"\r\n\t\t\t\t\tid=\"panel1a-header\"\r\n\t\t\t\t>\r\n          <Typography className={classes.heading}><b>展開更新活動資訊</b></Typography>\r\n\t\t\t\t</ExpansionPanelSummary>\r\n\r\n\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"event-title\">活動標題</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"event-title\"\r\n\t\t\t\t\t\t\tdefaultValue={event_Title}\r\n\t\t\t\t\t\t\tonChange={onEventTitleChange}\r\n\t\t\t\t\t\t/>\r\n        \t</FormControl>\r\n\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"event-duration\"\r\n\t\t\t\t\t\t\tlabel=\"活動時長\"\t\t\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ min: \"0\", max: \"500\", step: \"1\" }}\r\n\t\t\t\t\t\t\tdefaultValue={parseInt(eventDur)}\r\n\t\t\t\t\t\t\tonChange={onEventDurationChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"round-max-pt\"\r\n\t\t\t\t\t\t\tlabel=\"周回理論PT\"\t\t\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ min: \"1\", max: \"49999\", step: \"10\" }}\r\n\t\t\t\t\t\t\tdefaultValue={parseInt(roundMaxPoint)}\r\n\t\t\t\t\t\t\tonChange={onRoundMaxPointChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"fastest-round\"\r\n\t\t\t\t\t\t\tlabel=\"周回秒數\"\t\t\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ min: \"1\", max: \"300\", step: \"1\" }}\r\n\t\t\t\t\t\t\tdefaultValue={parseInt(fastestRd)}\r\n\t\t\t\t\t\t\tonChange={onFastestRoundChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"maintain-hours\"\r\n\t\t\t\t\t\t\tlabel=\"維修補正\"\t\t\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ min: \"0\", max: \"500\", step: \"0.01\" }}\r\n\t\t\t\t\t\t\tdefaultValue={parseFloat(maintainHr)}\r\n\t\t\t\t\t\t\tonChange={onMaintainHrChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t{/* <div className={classes.midcol}> */}\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"event-start-date-time\"\r\n\t\t\t\t\t\t\t\tlabel=\"活動開始日時\"\r\n\t\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\t\tdefaultValue={convertTSForDatePicker(eventStartTS)}\r\n\t\t\t\t\t\t\t\tonChange={onEventStartTSChange}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t\t<div className={classes.smallcol}>\r\n\t\t\t\t\t\t<ExpansionPanelActions>\r\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={onEventDetailChange}>\r\n\t\t\t\t\t\t\t\t更新活動資訊\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ExpansionPanelActions>\r\n\t\t\t\t\t</div>\r\n\t\t\t</ExpansionPanel>\r\n\t\t</div>\r\n\t);\r\n}","import { extendObservable } from 'mobx';\r\n\r\n/**\r\n * UserStore\r\n */\r\n\r\nclass UserStore {\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: '',\r\n            userlevel: -1\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React, { Component } from \"react\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import \"ag-grid-community/dist/styles/ag-grid.css\";\r\n// import \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\n\r\nimport RankingTop10 from \"./RankingTop10\";\r\nimport EventDetail from \"./EventDetail\";\r\nimport UserStore from \"../stores/UserStore\";\r\n \r\nclass Ranking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      eventTitle: \"とあるバンドのスポーツフェスティバル☆\",\r\n      eventStartDate: \"2020-6-30\",\r\n      eventStartTime: \"15:00\",\r\n      eventDurationHr: 222,\r\n      roundMaxPoint: 12750,\r\n      fastestRoundSec: 125,\r\n      maintainenceHr: 0.00\r\n    };\r\n  }\r\n\r\n  //Strings to their exact timestamp in seconds\r\n  dayTimeToTimestamp(date, time) {\r\n    var res = [], res2 = [];\r\n    var year = 0, month = 0, day = 0, hour = 0;\r\n    if(date.includes(\"-\")) {\r\n      res = date.split(\"-\");\r\n      if(res.length === 3) {\r\n        year = parseInt(res[0]);\r\n        month = parseInt(res[1]);\r\n        day = parseInt(res[2]);\r\n      }\r\n    }\r\n    if(time.includes(\":\")) {\r\n      res2 = time.split(\":\");\r\n      if(res2.length !== 0) {\r\n        hour = parseInt(res2[0]);\r\n      }\r\n    }\r\n    // Force to JP time\r\n    var datum = new Date(Date.UTC(year,month-1,day,hour-9,0,0));\r\n    return datum.getTime()/1000;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {(!UserStore.isLoggedIn) ? (\r\n          <div>\r\n            <h2>TOP 10 - <b>{this.state.eventTitle}</b></h2>\r\n            <h4>\r\n              スタート日: <b>{this.state.eventStartDate} </b> | \r\n              イベント時間: <b>{this.state.eventDurationHr}</b> | \r\n              周回理論PT: <b>{this.state.roundMaxPoint}</b> |\r\n              周回理論時間: <b>{this.state.fastestRoundSec} 秒</b>\r\n            </h4>\r\n            <br/>\r\n            <RankingTop10 \r\n              eventStartTimestamp={this.dayTimeToTimestamp(this.state.eventStartDate, this.state.eventStartTime)}\r\n              eventDuration={this.state.eventDurationHr}\r\n              roundMaxPt={this.state.roundMaxPoint}\r\n              fastestRound={this.state.fastestRoundSec}\r\n              maintainenceHr={this.state.maintainenceHr}\r\n            />\r\n            <div class=\"editmenu\">\r\n              <EventDetail \r\n                eventTitle={this.state.eventTitle}\r\n                eventStartTimestamp={this.dayTimeToTimestamp(this.state.eventStartDate, this.state.eventStartTime)}\r\n                eventDuration={this.state.eventDurationHr}\r\n                roundMaxPt={this.state.roundMaxPoint}\r\n                fastestRound={this.state.fastestRoundSec}\r\n                maintainenceHr={this.state.maintainenceHr}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1 style={{ marginTop: \"15%\" }}>\r\n              這裡只適合少一個零的人看。\r\n            </h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ranking;","import React, { Component } from \"react\";\r\n \r\nclass Rankingtips extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>排名攻略</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rankingtips;","import React, { Component } from \"react\";\r\n \r\nclass Joke extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>梗/梗圖/母湯發言</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Joke;","import React, { Component } from \"react\";\r\n \r\nclass AboutLZ extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>關於LZ</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutLZ;","import React, { Component } from \"react\";\r\n \r\nclass Recommend extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>系統建議</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommend;","import React, { Component } from \"react\";\r\n// import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import OutlinedInput from '@material-ui/core/OutlinedInput';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Visibility from '@material-ui/icons/Visibility';\r\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport UserStore from '../stores/UserStore';\r\n \r\nclass LoginForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPassword: false,\r\n      password: '',\r\n      username: '',\r\n      loginDisabled: false,\r\n      resetDisabled: true,\r\n      useStyles: makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          border: '1px solid #e2e2e1',\r\n          overflow: 'hidden',\r\n          borderRadius: 4,\r\n          backgroundColor: '#fcfcfb',\r\n          transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n          '&:hover': {\r\n            backgroundColor: '#fff',\r\n          },\r\n          '&$focused': {\r\n            backgroundColor: '#fff',\r\n            borderColor: theme.palette.primary.main,\r\n          },\r\n        },\r\n        margin: {\r\n          margin: theme.spacing(1),\r\n        },\r\n        withoutLabel: {\r\n          marginTop: theme.spacing(3),\r\n        },\r\n        textField: {\r\n          width: '25ch',\r\n        },\r\n      })),\r\n      classes: this.useStyles\r\n\r\n    }\r\n  }\r\n\r\n  onUsernameFieldChange = (event) => {\r\n    var val = event.target.value;\r\n    this.setState({\r\n      username: (val != null ? val : ''),\r\n      resetDisabled: ((val !== '' || this.state.username !== '') ? false : true)\r\n    });\r\n  };\r\n\r\n  onPasswordFieldChange = (event) => {\r\n    var val = event.target.value;\r\n    this.setState({\r\n      password: (val != null ? val : ''),\r\n      resetDisabled: ((val !== '' || this.state.username !== '') ? false : true)\r\n    });\r\n  };\r\n\r\n  onClickShowPassword = () => {\r\n    this.setState({\r\n      showPassword: !this.state.showPassword \r\n    });\r\n  };\r\n\r\n  onMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      loginDisabled: false,\r\n      resetDisabled: true\r\n    });\r\n  };\r\n\r\n  async doLogin() {\r\n    if(!this.state.username) {\r\n      return;\r\n    }\r\n    if(!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      loginDisabled: true,\r\n      resetDisabled: true\r\n    });\r\n\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept':'application/json',\r\n          'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if(result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n        UserStore.userlevel = result.userlevel;\r\n      }\r\n      else if(result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        <table>\r\n            <tr>\r\n              {/* <td><label>用戶名:&nbsp;&nbsp;</label></td> */}\r\n              <td>\r\n                <input className=\"login-input\" \r\n                  id=\"login-field\" \r\n                  type=\"text\" \r\n                  placeholder=\"用戶ID\"\r\n                  value={this.state.username} \r\n                  onChange={this.onUsernameFieldChange} \r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              {/* <td><label>密碼:&nbsp;&nbsp;</label></td> */}\r\n              <td>\r\n                <input className=\"login-input\" \r\n                  id=\"password-field\" \r\n                  type=\"password\" \r\n                  placeholder=\"密碼\"\r\n                  value={this.state.password} \r\n                  onChange={this.onPasswordFieldChange} \r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              {/* <td></td> */}\r\n              <td>\r\n                <Button \r\n                  className=\"loginbuttons\"\r\n                  id=\"reset-button\"\r\n                  variant=\"contained\" \r\n                  color=\"secondary\"\r\n                  disabled={this.state.resetDisabled}\r\n                  onClick={this.resetForm}\r\n                >重設</Button>\r\n                &nbsp;&nbsp;\r\n                <Button \r\n                  className=\"loginbuttons\"\r\n                  id=\"login-button\"\r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  disabled={this.state.loginDisabled}\r\n                  onClick={() => this.doLogin()}\r\n                >登入</Button>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        {/* <div>\r\n         <FormControl fullWidth className={clsx(this.state.useStyles.margin, this.state.useStyles.textField)} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username-field\">用戶名稱</InputLabel>\r\n            <OutlinedInput\r\n              id=\"username-field\"\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              className={this.state.useStyles.root}\r\n\r\n              onChange={this.onUsernameFieldChange}\r\n              labelWidth={65}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <br/>\r\n        <div>\r\n          <FormControl fullWidth className={clsx(this.state.useStyles.margin, this.state.useStyles.textField)} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"password-field\">密碼</InputLabel>\r\n            <OutlinedInput\r\n              id=\"password-field\"\r\n              type={this.state.showPassword ? 'text' : 'password'}\r\n              value={this.state.password}\r\n              className={this.state.useStyles.root}\r\n\r\n              onChange={this.onPasswordFieldChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={this.onClickShowPassword}\r\n                    onMouseDown={this.onMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={30}\r\n            />\r\n          </FormControl>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { observer } from 'mobx-react';\r\nimport UserStore from \"../stores/UserStore\";\r\nimport LoginForm from \"./LoginForm\";\r\n \r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      useStyles: makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n      })),\r\n      classes: this.useStyles\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await fetch('/isLoggedIn', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      let result = res.json(); // await needed?\r\n      if(result && result.success) {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n      else {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n      }\r\n\r\n    }\r\n    catch(e) {\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n  }\r\n\r\n  async doLogout() {\r\n    try {\r\n      \r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      let result = res.json(); // await needed?\r\n      if(result && result.success) {\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n\r\n    }\r\n    catch(e) {\r\n      // In case if have error.\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    if(!UserStore.isLoggedIn) {\r\n      return (\r\n        <div>\r\n          <h2>登入進行管理</h2>\r\n          <div>\r\n              <LoginForm />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <h1>\r\n            你已經登入了，還想再登入一次嗎:)?\r\n          </h1>\r\n          <div className={this.state.classes.root}>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.doLogout()}>\r\n              登出\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer(Login);","import React, { Component } from \"react\";\r\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Ranking from \"./Ranking\";\r\nimport Rankingtips from \"./Rankingtips\";\r\nimport Joke from \"./Joke\";\r\nimport AboutLZ from \"./AboutLZ\";\r\nimport Recommend from \"./Recommend\";\r\nimport Login from \"./Login\";\r\nimport UserStore from \"../stores/UserStore\";\r\n \r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          {/* <h2>LZ資訊站</h2> */}\r\n          <ul className=\"header\">\r\n            <li><NavLink exact to=\"/\">主頁</NavLink></li>\r\n            <li><NavLink to=\"/ranking\">股票</NavLink></li>\r\n            <li><NavLink to=\"/rankingtips\">排名攻略</NavLink></li>\r\n            <li><NavLink to=\"/jokes\">梗/梗圖/SY</NavLink></li>\r\n            <li><NavLink to=\"/aboutlz\">關於LZ</NavLink></li>\r\n            <li><NavLink to=\"/recommend\">系統建議</NavLink></li>\r\n            {(!UserStore.isLoggedIn || UserStore.username === '') ? (\r\n              <li><NavLink to=\"/login\">登入</NavLink></li>\r\n            ) : (\r\n              <li>觀迎 {UserStore.username} </li>\r\n            )}\r\n            {(UserStore.isLoggedIn && UserStore.username !== '') ? (\r\n              <li onClick={() => UserStore.doLogout()}>登出</li>) : ( null )\r\n            }\r\n          </ul>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/ranking\" component={Ranking}/>\r\n            <Route path=\"/rankingtips\" component={Rankingtips}/>\r\n            <Route path=\"/jokes\" component={Joke}/>\r\n            <Route path=\"/aboutlz\" component={AboutLZ}/>\r\n            <Route path=\"/recommend\" component={Recommend}/>\r\n            <Route path=\"/login\" component={Login}/>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Main;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Main from './component/Main.js';\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}